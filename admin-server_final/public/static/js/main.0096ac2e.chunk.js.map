{"version":3,"sources":["redux/contances.js","api/axios.js","api/index.js","utils/storageUtils.js","redux/actions/user.js","pages/Login/index.jsx","assets/images/glBg.jpg","config/menuConfig.js","pages/LeftNav/index.jsx","pages/Commodity/Category/Add-Category/index.jsx","pages/Commodity/Category/Updata-Category/index.jsx","pages/Commodity/Category/index.jsx","pages/Charts/Bar/index.jsx","pages/Charts/Line/index.jsx","pages/Charts/Pie/index.jsx","pages/Home/index.jsx","pages/Commodity/Product/Add_Update/picture-wall.js","pages/Commodity/Product/Add_Update/RichTextEditor.js","pages/Commodity/Product/Add_Update/index.jsx","pages/Commodity/Product/Detail/index.jsx","pages/Commodity/Product/Home/index.jsx","utils/constances.js","pages/Commodity/Product/index.jsx","pages/Role/AddRole/index.jsx","pages/Role/ConfigRole/index.jsx","pages/Role/index.jsx","pages/User/AddOrUpdate.jsx","pages/User/index.jsx","pages/MyHeader/index.jsx","pages/MyFooter/index.jsx","pages/NonePage/index.jsx","pages/Admin/index.jsx","pages/Register/index.jsx","App.js","redux/reducers/user_reducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["RECEIVE_USER","SHOW_ERROR_MSG","RESET_USER","myAxios","url","data","method","Promise","resolve","reject","promise","axios","get","params","post","then","response","catch","error","message","console","log","reqLogin","username","password","proxy","reqGetCotegory","parentId","reqAddCotegory","categoryName","reqUpdataCotegory","categoryId","reqGetGoryNameWithId","reqGetProduct","pageNum","pageSize","reqGetProductForSearch","searchType","serachWord","reqUpdateProductStatus","_id","status","reqDeleteImg","name","reqRoles","reqAddRole","roleName","reqAddOrUpdateUser","USER_KEY","TAG_ACTIVE_KEY","TAGS_ARR_KEY","saveUser","user","localStorage","setItem","JSON","stringify","getUser","parse","getItem","saveTagstoStorage","activeKey","tagsArr","sessionStorage","getTagsArr","receiveUser","type","logout","removeItem","Login","onFinish","values","a","props","login","onFinishFailed","warn","showInitUser","success","this","history","push","msg","isLogin","className","id","initialValues","remember","Item","rules","required","min","max","pattern","prefix","UserOutlined","placeholder","Password","LockOutlined","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","valuePropName","noStyle","onClick","htmlType","href","Component","connect","state","dispatch","result","menuList","title","key","icon","HomeOutlined","isPublic","AppstoreAddOutlined","children","BarsOutlined","ToolOutlined","UsergroupAddOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","SubMenu","LeftNav","checkUserMenu","item","role","menus","indexOf","some","child","subMenuOpenChenge","e","saveOpenKeysInStore","showBgText","Flag","shpantextNode","linkClickHandle","target","pathname","tagsData","textContent","PubSub","publish","getMenuList","menuConfig","map","onTitleClick","SubMenuClickHandle","to","arr","getOpenKeysInStore","setlectKeysPathname","location","pathArr","split","i","length","findKeys","join","findMenuKeys","menu","obj","collapeseType","openKeys","src","bgimg","alt","onOpenChange","theme","mode","selectedKeys","defaultOpenKeys","withRouter","Option","Add_Category","confirmLoading","modalText","optionsData","handleOk","form","getFieldValue","caregoryName","parentCaregory","undefined","warning","showCategory","showSonCategory","handleCancel","changeModelStatus","onSearch","val","onFocus","onBlur","onChange","value","setFieldsValue","onOk","onCancel","ref","c","labelCol","pan","wrapperCol","span","label","showSearch","style","width","optionFilterProp","filterOption","input","option","toLowerCase","viewModleStaus","CateDataArr","Updata_Category","formRef","updataObj","Category","loading","scendCateDataArr","getAllCategory","callback","setState","newSonCategory","newCategory","changeCategoryName","addCategory","columns","dataIndex","render","text","record","size","ArrowRightOutlined","extra","shape","PlusOutlined","dataSource","bordered","pagination","position","showQuickJumper","rowKey","Bar","seals","update","v","parseInt","Math","random","getOption","tooltip","legend","xAxis","yAxis","series","Line","splitData","rawData","categoryData","renderItem","api","xValue","openPoint","coord","closePoint","lowPoint","highPoint","halfWidth","stroke","visual","x1","y1","x2","y2","trigger","toolbox","feature","saveAsImage","grid","left","right","bottom","containLabel","boundaryGap","stack","areaStyle","normal","Pie","top","show","mark","dataView","readOnly","restore","radius","center","roseType","itemStyle","borderRadius","height","Home","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","imgsDataToFather","imgsData","fileList","getImgDataToForm","deleteImg","previewVisible","handlePreview","preview","originFileObj","previewImage","previewTitle","substring","lastIndexOf","handleChange","newfile","isUpdate","images","img","index","uid","percent","uploadButton","marginTop","accept","action","listType","onPreview","footer","EditorConvertToHTML","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","responseText","link","getDetail","draftToHtml","convertToRaw","editorState","getCurrentContent","onEditorStateChange","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","localization","locale","editorClassName","editorStyle","border","toolbar","image","uploadCallback","present","mandatory","TextArea","Add_Uptate","options","imgs","desc","price","category","pCategoryId","EditorRef","current","prouct","errorInfo","TextAreaonChange","checkPrice","_","Number","Error","selectOnChange","selectedOptions","initOptions","categgory","isLeaf","getCotegorys","subCategoryData","selectOptions","find","childrenData","parent_id","loadData","targetOption","initUpdate","initiaValues","updateValue","React","createRef","goBack","ArrowLeftOutlined","xs","sm","whitespace","showCount","maxLength","validator","addonAfter","changeOnSelect","colon","Detail","getCategoryName","all","results","backHome","pageNow","searchWord","replace","subTitle","textAlign","color","orientation","dangerouslySetInnerHTML","__html","padding","PreviewGroup","imgstr","selectValue","keyword","getProductForPage","updateProductStatus","newStatus","gotoDetail","context","searchNoneWord","initDataNode","danger","InfoCircleOutlined","titleNode","layout","SearchOutlined","fontSize","extraNode","PlusSquareOutlined","list","total","Product","path","component","exact","Add_upDate","AddRole","getRoles","treeData","ConfigRole","onSelect","info","onCheck","checkedKeys","auth_time","Date","auth_name","disabled","checkable","defaultCheckedKeys","Role","viewModelStatus","onRow","event","initNode","toLocaleString","selectedRowKeys","selectedRows","rowSelection","defaultPageSize","AddUpdateModel","userdata","rolesArr","handleAddAndUpdateUser","str","getUserList","email","phone","role_id","submitBtnRef","rolesData","User","initRoleNameObject","roles","reduce","pre","roleName_Id","users","addModel","changeModel","removeUser","userId","removeConfirm","onConfirm","okText","cancelText","confirm","TabPane","MyHeader","newTabIndex","panes","onEdit","targetKey","add","paneObj","newPanes","pane","remove","lastIndex","newActiveKey","forEach","filter","logOut","ExclamationCircleOutlined","initialPanes","weather","time","subscribe","city","extensions","output","getWeather","timer","setInterval","toLocaleTimeString","clearInterval","dayWeather","forecasts","casts","dayweather","count","hideAdd","tab","closable","closeIcon","CloseCircleOutlined","toLocaleDateString","MyFooter","NonePage","Header","Footer","Sider","Content","Admin","collapeseHanlde","collapsed","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","margin","minHeight","from","backgroundColor","residences","formItemLayout","tailFormItemLayout","offset","Register","useForm","prefixSelector","useState","autoCompleteResult","setAutoCompleteResult","websiteOptions","website","residence","scrollToFirstError","hasFeedback","dependencies","addonBefore","domain","gutter","App","initUser","combineReducers","prestate","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.0096ac2e.chunk.js","sourcesContent":["// 常量\r\nconst RECEIVE_USER = 'receive_user'  // 接收用户信息\r\nconst SHOW_ERROR_MSG = 'show_error_msg' // 显示错误信息\r\nconst RESET_USER = 'reset_user' // 重置用户信息\r\nexport{\r\n    RECEIVE_USER,SHOW_ERROR_MSG,RESET_USER\r\n}","/*\r\n1.优化：统一处理请求异常\r\n*/\r\nimport axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\n\r\nexport default function myAxios(url,data={},method='GET'){\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        let promise;\r\n        // 1.执行异步ajax请求\r\n        if(method === 'GET'){\r\n            promise = axios.get(url,{\r\n                params:data\r\n            })\r\n        }else if(method === 'POST'){\r\n            promise = axios.post(url,data)\r\n        }\r\n        // console.log('promise 的then开始执行')\r\n        // 2.如果成功，调用resolve\r\n        promise.then(response=>{resolve(response.data)})\r\n        // 3.如果失败，不调用reject，而是提示异常信息\r\n                .catch(error=>{\r\n                    message.error('请求出错了'+error.message)\r\n                })\r\n        \r\n\r\n    })\r\n\r\n    \r\n}","// import Base from 'antd/lib/typography/Base';\r\nimport myAxios from './axios'\r\n\r\n//包含所有接口请求函数的模块\r\nconst BASE = '/api'  //与后端匹配\r\nlet proxy = ''\r\nif(process.env.NODE_ENV === 'development'){\r\n    // 开发环境\r\n    proxy = '/api1'\r\n    console.log('开发环境')\r\n}else{\r\n    // 生产环境\r\n    console.log('生产环境')\r\n\r\n}\r\n//登录请求\r\nexport const reqLogin = (username,password) => myAxios(proxy+BASE+'/login',{username,password},'POST');\r\n\r\n\r\n// 获取用户地址\r\nexport const reqGetLocation = (data) => myAxios('https://restapi.amap.com/v5/ip?key=5054ae320e60bfdf4c03a21cb2efec52&type=4&ip=221.206.131.10',data,'GET');\r\n// {\r\n//     key:'5054ae320e60bfdf4c03a21cb2efec52',\r\n//     type:4,\r\n//     ip:'221.206.131.10'\r\n// }\r\n\r\n// 获取天气\r\nexport const reqGetWeather = (data) => myAxios('https://restapi.amap.com/v3/weather/weatherInfo',data,'GET');\r\n// {\r\n//     key:'5054ae320e60bfdf4c03a21cb2efec52',\r\n//     city:'110101',\r\n//     extensions:'all',\r\n//     output:'json'\r\n// }\r\n\r\n\r\n// jsonp\r\n// jsonp('https://restapi.amap.com/v3/weather/weatherInfo?key=5054ae320e60bfdf4c03a21cb2efec52&city=110101&extensions=all&output=json',{\r\n//     param :{\r\n//         key:'5054ae320e60bfdf4c03a21cb2efec52',\r\n//         type:4,\r\n//         ip:'221.206.131.10'\r\n\r\n//     }\r\n// }, (err,data) => {\r\n//     if(err){\r\n//         console.log(err)\r\n//         return\r\n//     }\r\n//     console.log(data)\r\n\r\n// } )\r\n\r\n// 分类 \r\n// 获取/添加/更新/获取商品的分类名和父类分类名\r\nexport const reqGetCotegory = (parentId)=>myAxios(proxy+BASE+'/manage/category/list',{parentId},'GET')\r\nexport const reqAddCotegory = (parentId,categoryName)=>myAxios(proxy+BASE+'/manage/category/add',{parentId,categoryName},'POST')\r\nexport const reqUpdataCotegory = (categoryId,categoryName)=>myAxios(proxy+BASE+'/manage/category/update',{categoryId,categoryName},'POST')\r\n//根据分类id获取的分类名\r\nexport const reqGetGoryNameWithId= (categoryId)=>myAxios(proxy+BASE+'/manage/category/info',{categoryId})\r\n\r\n\r\n// 商品 \r\n// 获取分页列表\r\nexport const reqGetProduct = (pageNum,pageSize)=>myAxios(proxy+BASE+'/manage/product/search',{pageNum,pageSize})\r\n// 搜索分页列表\r\nexport const reqGetProductForSearch = (pageNum,pageSize,searchType,serachWord)=>myAxios(proxy+BASE+'/manage/product/search',\r\n        {\r\n            pageNum,\r\n            pageSize,\r\n            // 第三格参数 可能时productDesc=描述搜索，也可能时productName名字搜索\r\n            [searchType]:serachWord\r\n        }\r\n)\r\n// 更改商品上架、下架\r\nexport const reqUpdateProductStatus = (_id,status)=>myAxios(proxy+BASE+'/manage/product/update',{_id,status},'POST')\r\n\r\n//添加或更新商品\r\nexport const reqAddOrUpdateProduct = (prouct)=>myAxios(proxy+BASE+'/manage/product/'+(prouct._id?'update':'add'),prouct,'POST')\r\n\r\n// /manage/product/add\r\n// 删除商品图片\r\nexport const reqDeleteImg = (name)=>myAxios(proxy+BASE+'/manage/img/delete',{name},'POST')\r\n\r\n\r\n// 角色管理\r\nexport const reqRoles = ()=>myAxios(proxy+BASE+'/manage/role/list');\r\n// 添加角色\r\nexport const reqAddRole = (roleName)=>myAxios(proxy+BASE+'/manage/role/add',{roleName},'POST');\r\n// 修改角色\r\nexport const reqUpdateRole = (role)=>myAxios(proxy+BASE+'/manage/role/update',role,'POST');\r\n\r\n\r\n// 获取所有用户\r\nexport const reqGetAllUser = () => myAxios(proxy+BASE+'/manage/user/list');\r\n// 添加或更新用户\r\nexport const reqAddOrUpdateUser = data => myAxios(proxy+BASE+'/manage/user/'+(data._id?'update':'add'),data,'POST');\r\n// 删除用户\r\nexport const reqRemoveUser = userId => myAxios(proxy+BASE+'/manage/user/delete',{userId},'POST');\r\n// 修改用户信息\r\n// export const reqUpdateUser = data => myAxios(BASE+'/api1/manage/user/update',data,'POST');\r\n\r\n\r\n","/**\r\n * 数据存储在localstorage中 \r\n */\r\nconst USER_KEY = 'user_key';\r\nconst TAG_ACTIVE_KEY = 'tag_active_key';\r\nconst TAGS_ARR_KEY = 'tags_arr_key';\r\n\r\n// 保存User\r\nconst saveUser = (user)=>{\r\n    localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n};\r\n\r\n// 读取user\r\nconst getUser=()=>{\r\n    return JSON.parse(localStorage.getItem(USER_KEY)||'{}') ;\r\n};\r\n// 删除user\r\nconst deleteUser=()=>{\r\n    localStorage.removeItem(USER_KEY)\r\n}\r\n\r\n// 保存打开过的标签列表于session storage\r\nconst saveTagstoStorage = (activeKey,tagsArr)=>{\r\n    sessionStorage.setItem(TAG_ACTIVE_KEY,activeKey);\r\n    sessionStorage.setItem(TAGS_ARR_KEY,JSON.stringify(tagsArr))\r\n}\r\n// 读取 activeKey\r\nconst getActiveTagKey = () => {\r\n    return sessionStorage.getItem(TAG_ACTIVE_KEY||'');\r\n}\r\n\r\n// 读取tagsarr\r\nconst getTagsArr = () => {\r\n    return JSON.parse(sessionStorage.getItem(TAGS_ARR_KEY)||'[]');\r\n}\r\n\r\nexport {\r\n    saveUser,getUser,deleteUser,saveTagstoStorage,getActiveTagKey,getTagsArr\r\n}","/*\r\n包含n个action creator函数的模块\r\n同步action: 对象 {type: 'xxx', data: 数据值}\r\n异步action: 函数  dispatch => {}\r\n */\r\nimport {\r\n    RECEIVE_USER,\r\n    RESET_USER,\r\n    SHOW_ERROR_MSG\r\n  } from '../contances'\r\n  import {reqLogin} from '../../api'\r\n  import {saveUser,deleteUser} from \"../../utils/storageUtils\";\r\n  \r\n  \r\n  /*\r\n  接收用户的同步action\r\n   */\r\n  export const receiveUser = (user) => ({type: RECEIVE_USER, data:user})\r\n  \r\n  /*\r\n  显示错误信息同步action\r\n   */\r\n  export const showErrorMsg = (errorMsg) => ({type: SHOW_ERROR_MSG, data:errorMsg})\r\n  \r\n  /*\r\n  退出登陆的同步action\r\n   */\r\n  export const logout = () =>  {\r\n    // 删除local中的user\r\n    deleteUser()\r\n    // 返回action对象\r\n    return {type: RESET_USER}\r\n  }\r\n  \r\n  /*\r\n  登陆的异步action\r\n   */\r\n  export const login = (username, password) => {\r\n    return async dispatch => {\r\n      // 1. 执行异步ajax请求\r\n      const result = await reqLogin(username, password)  // {status: 0, data: user} {status: 1, msg: 'xxx'}\r\n      // 2.1. 如果成功, 分发成功的同步action\r\n      if(result.status===0) {\r\n        const user = result.data\r\n        // 保存local中\r\n        saveUser(user);\r\n        // 分发接收用户的同步action\r\n        dispatch(receiveUser(user))\r\n      } else { // 2.2. 如果失败, 分发失败的同步action\r\n        const msg = result.msg\r\n        // message.error(msg)\r\n        dispatch(showErrorMsg(msg))\r\n      }\r\n  \r\n    }\r\n  }\r\n  ","import React, { Component } from 'react'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd'\r\nimport { UserOutlined, LockOutlined,EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\r\n\r\nimport { Redirect } from 'react-router-dom'\r\nimport './login.css'\r\n// redux\r\nimport {connect} from 'react-redux'\r\nimport {login} from '../../redux/actions/user'\r\n class Login extends Component {\r\n     \r\n\r\n    onFinish =async (values) => {\r\n        console.log('提交登录请求的ajax', values);\r\n        const {username,password} = values;\r\n        //普通then语法\r\n        // reqLogin(username,password)\r\n        //     .then(res=>console.log('success',res.data))\r\n        //     .catch((err) => {\r\n        //         console.log('失败',err)\r\n        //     })\r\n        \r\n        //未优化错误处理时=，用try catch处理\r\n        // try {\r\n        //     const response = await reqLogin(username,password)\r\n        //     console.log('请求成功了',response.data)\r\n        // } catch (error) {\r\n        //     console.log('请求失败了',error)\r\n        // }\r\n\r\n        // 优化错误处理后，不需要trycatch\r\n        // const result = await reqLogin(username,password)\r\n        // console.log('请求成功了',result)\r\n        // if (result.status ===0) {\r\n        //     //登录成功\r\n        //     message.success('登录成功')\r\n        //     // console.log(this.props)\r\n            \r\n        //     // 添加用户信息到memoryUtils中\r\n        //     const user = result.data;//获取用户信息\r\n        //     memoryUtils.user = user;\r\n        //     saveUser(user);\r\n        //     console.log(memoryUtils.user)\r\n\r\n        //     // 跳转到admin页面\r\n        //     this.props.history.replace('/')\r\n\r\n        // }else{\r\n        //     // 登录失败\r\n        //     message.error(result.msg)\r\n        // }\r\n\r\n        // redux版本\r\n        this.props.login(username,password);\r\n        \r\n\r\n    };\r\n\r\n    onFinishFailed = (values) =>{\r\n        console.log('阻止提交');\r\n        message.warn('请按正确要求输入用户名和密码');\r\n    }\r\n    \r\n    showInitUser = () => {\r\n        message.success(`\r\n        用户名:admin\r\n        密码:admin\r\n        `)\r\n    }\r\n    \r\n    isLogin(){\r\n        // 判断用户是否登录，如登录则跳转到admin界面\r\n        const user = this.props.user\r\n        console.log(user)\r\n        console.log(this.props.history)\r\n        if(user&&user._id){\r\n            message.success('登录成功')\r\n            this.props.history.push('/')\r\n            \r\n        }\r\n        // 根据redux的user判断是否登录成功\r\n        if(user.msg){\r\n            message.error(user.msg)\r\n            console.log(user.msg)\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.isLogin();\r\n    }\r\n\r\n    \r\n    componentDidUpdate(){\r\n        this.isLogin()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = 'login-bg'>\r\n                <header></header>\r\n                <div className=\"login\">\r\n                    <div className=\"message\">档案管理系统——DMS</div>\r\n                    <div id=\"darkbannerwrap\"></div>\r\n\r\n                    <Form name=\"normal_login\" className=\"login-form\"\r\n                        initialValues={{ remember: true, }}\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed = {this.onFinishFailed}\r\n                        >\r\n                            {/* \r\n                                用户名输入框 \r\n                                ● 用户名长度5-12个字符；\r\n                            　　● 只能是字母数字和下划线 \r\n                            */}\r\n                        <Form.Item name=\"username\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please input your Username!',\r\n                                },\r\n                                {\r\n                                    type:'string',\r\n                                },\r\n                                {\r\n                                    min:5,\r\n                                    message:'长度不能小于5'\r\n                                },\r\n                                {\r\n                                    max:20,\r\n                                    message:'长度不能大于20'\r\n                                },\r\n                                {\r\n                                    pattern:/^[\\w]+$/,\r\n                                    message:'只能是字母、数字和下划线的组合'\r\n                                }\r\n                            \r\n                            ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                        </Form.Item>\r\n\r\n                            {/* .\r\n                                密码输入框\r\n                                ● 密码长度8－32个字符；\r\n                            　　● 不能使用空格、中文；\r\n                            　　● 至少含数字、字母、符号两种组合；\r\n                            　　● 至少含三个不同的字符\r\n                             */}\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                \r\n                                {\r\n                                    required: true,\r\n                                    message: '不能位空',\r\n                                },\r\n                                \r\n                                {\r\n                                    type:'string',\r\n                                   \r\n                                },\r\n                                // {\r\n                                //     pattern:/((?=.*\\d)(?=.*\\D)|(?=.*[a-zA-Z])(?=.*[^a-zA-Z]))(?!^.*[\\u4E00-\\u9FA5].*$)^\\S{5,16}$/g,\r\n                                //     message:'密码必须由5-16位至少为字母、数字、符号两种组成，不包含空格,不能输入中文'\r\n                                // }\r\n                                {\r\n                                    pattern:/\\w{5,16}$/g,\r\n                                    message:'密码必须由5-16位至少为字母、数字、符号两种组成，不包含空格,不能输入中文'\r\n                                }\r\n                            \r\n\r\n                            ]}\r\n                        >\r\n                            <Input.Password\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                            />\r\n                            \r\n                        </Form.Item>\r\n                        {/* \r\n                            是否记住我\r\n                        */}\r\n                        <Form.Item>\r\n                            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                            <Checkbox>Remember me</Checkbox>\r\n                            </Form.Item>\r\n\r\n                            <Button onClick = {this.showInitUser} type=\"link\">Forgot password</Button>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            登录\r\n                            </Button>\r\n                            Or <a href=\"/register\">现在注册!</a>\r\n                        </Form.Item>\r\n                        </Form>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state=>({user:state.user}),\r\n    {\r\n        login\r\n    }\r\n)(Login)\r\n","export default __webpack_public_path__ + \"static/media/glBg.52b0769c.jpg\";","import {\r\n    HomeOutlined,AppstoreAddOutlined,BarsOutlined,\r\n    ToolOutlined,\r\n    UserOutlined,\r\n    UsergroupAddOutlined,\r\n    AreaChartOutlined,\r\n    BarChartOutlined,\r\n    LineChartOutlined,\r\n    PieChartOutlined,\r\n} from '@ant-design/icons';\r\nconst menuList = [\r\n    {\r\n        title: '首页', // 菜单标题名称\r\n        key: '/home', // 对应的 path\r\n        icon: <HomeOutlined />, // 图标名称\r\n        isPublic:true,\r\n    },\r\n    {\r\n        title: '商品',\r\n        key: '/commodity',\r\n        icon: <AppstoreAddOutlined />,\r\n        children: [ // 子菜单列表\r\n            {\r\n                title: '品类管理',\r\n                key: '/commodity/category',\r\n                icon: <BarsOutlined />\r\n            },\r\n            {\r\n                title: '商品管理',\r\n                key: '/commodity/product',\r\n                icon: <ToolOutlined />,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '用户管理',\r\n        key: '/user',\r\n        icon: <UserOutlined />\r\n    },\r\n    {\r\n        title: '角色管理',\r\n        key: '/role',\r\n        icon: <UsergroupAddOutlined />,\r\n    },\r\n    {\r\n        title: '图形图表',\r\n        key: '/charts',\r\n        icon: <AreaChartOutlined />,\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/charts/bar',\r\n                icon: <BarChartOutlined />\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/charts/line',\r\n                icon: <LineChartOutlined />\r\n            },\r\n            {\r\n                title: '饼图',\r\n                key: '/charts/pie',\r\n                icon: <PieChartOutlined />\r\n            },\r\n        ]\r\n    },\r\n    \r\n]\r\n\r\nexport default menuList;","import React, { Component,Fragment } from 'react'\r\nimport {Menu} from 'antd'\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport PubSub from 'pubsub-js'\r\n// import {FlagFilled, UserOutlined} from '@ant-design/icons';\r\nimport bgimg from '../../assets/images/glBg.jpg'\r\nimport './index.css'\r\nimport {connect} from 'react-redux'\r\n// 导入Menu配置文件\r\nimport menuConfig from '../../config/menuConfig'\r\n// 引入多级菜单\r\nconst { SubMenu } = Menu;\r\nclass LeftNav extends Component {\r\n    \r\n    // 检查当前用户的menu\r\n    checkUserMenu = (item,user) => {\r\n        // 一级判断\r\n        if(user.username ==='admin'||item.isPublic||user.role.menus.indexOf(item.key)>=0){\r\n            return true;\r\n        }else if(item.children){\r\n            return item.children.some((child)=>user.role.menus.indexOf(child.key)>=0)\r\n        }\r\n    }\r\n    // subMenu展开或关闭的回调\r\n    subMenuOpenChenge = (e) => {\r\n        // 获取到当前有哪些sub属于打开中的，  返回值是数组\r\n        this.saveOpenKeysInStore(e)\r\n    }\r\n    // 是否显示logo后面的文字\r\n    showBgText = (Flag) =>{\r\n        if(Flag){\r\n            console.log(this.shpantextNode)\r\n        }\r\n    }\r\n    // link点击事件\r\n    linkClickHandle = (e) => {\r\n        let key = e.target.pathname\r\n        let title =e.target.textContent;\r\n        const tagsData = {\r\n            title,key\r\n        }\r\n        PubSub.publish('addTags',tagsData)\r\n    }\r\n    //获取目录列表的Node\r\n    getMenuList = (menuConfig) => {\r\n        const {user} = this.props;\r\n          return  menuConfig.map((item) => {\r\n\r\n              let hasMenu = this.checkUserMenu(item,user)\r\n\r\n            if(hasMenu){\r\n                \r\n                if(!item.children){\r\n                    // 没有二级菜单\r\n                    return (\r\n                        <Menu.Item key={item.key} icon={item.icon}>\r\n                            <Link to={item.key} onClick = {this.linkClickHandle}>\r\n                                {item.title}\r\n                            </Link>\r\n                            \r\n                        </Menu.Item>\r\n                    )\r\n                }else{\r\n                    return(\r\n                        <SubMenu onTitleClick = {this.SubMenuClickHandle} key={item.key} icon={item.icon} title={item.title}>\r\n                            {this.getMenuList(item.children)}\r\n                        </SubMenu>\r\n                    )\r\n                    }\r\n                \r\n                }\r\n          })\r\n\r\n    }\r\n\r\n    //\r\n    SubMenuClickHandle = (e) => {\r\n        console.log('subMenCLikhandle',e)\r\n    }\r\n\r\n    // 将打开过的多级菜单数组 保存到localstorage中\r\n    saveOpenKeysInStore = (arr) => {\r\n        localStorage.setItem('subMenu_OpenKeys',JSON.stringify(arr))\r\n    }\r\n    // 得到本地存储的多级菜单记忆\r\n    getOpenKeysInStore = () => {\r\n        let memoreOpenKeys =JSON.parse( localStorage.getItem('subMenu_OpenKeys'));\r\n        return memoreOpenKeys||[];  \r\n    }\r\n    // 左边导航的选中栏\r\n    setlectKeysPathname = ()=>{\r\n        // 接受到路由中中的location中的pathname，也就是要去到的url  比如/home   //commodity/product/detail等\r\n        let  {pathname} = this.props.location;\r\n        if(pathname === '/none'){\r\n            console.log('leftLev none')\r\n        }\r\n        // 又可能处于某一导航下的子路由，且这个子路由并没有出现在Menu的所有key中\r\n       let pathArr = pathname.split('/');\r\n       for(let i = pathArr.length+1;i>0;i--){\r\n           pathArr.length = i-1;\r\n           let findKeys = pathArr.join('/');\r\n           let result = this.findMenuKeys(findKeys,menuConfig)\r\n           if(result)return result.key\r\n       }\r\n    }\r\n    // 通过key查找在目录中是否存在这个key，若存在，返回这个对象，不存在，返回null\r\n        // 用于做导航的选中状态\r\n    findMenuKeys = (key,menu)=>{\r\n        console.log(key)\r\n        let result = null;\r\n        for (const obj of menu) {\r\n            if(obj.key === key){\r\n                result = obj;\r\n                return result;\r\n            }\r\n            if(obj.children){\r\n                result = this.findMenuKeys(key,obj.children)\r\n                if(result) return result;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const {collapeseType} = this.props;\r\n        // console.log('left nav props',this.props)\r\n        const openKeys = this.getOpenKeysInStore()\r\n        return (\r\n            <Fragment>\r\n                <div className=\"admin-logo\" >\r\n                    <img src={bgimg} alt=\"logo\" />\r\n                    <span className={collapeseType?'':'active'} >谷粒后台</span>\r\n                </div>\r\n                <Menu onOpenChange = {this.subMenuOpenChenge} theme=\"dark\" mode=\"inline\" selectedKeys={[this.setlectKeysPathname()]} defaultOpenKeys= {openKeys}>\r\n                    {this.getMenuList(menuConfig)}\r\n                </Menu>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state=>({user:state.user}),\r\n    {\r\n\r\n    }\r\n)(withRouter(LeftNav ))\r\n","import React, { Component } from 'react'\r\nimport {Modal,Form, Input,Select, message} from 'antd'\r\nimport {reqAddCotegory} from '../../../../api'\r\nconst {Item} = Form;\r\nconst {Option} = Select\r\nexport default class Add_Category extends Component {\r\n    \r\n    state = {\r\n        visible:false,\r\n        confirmLoading:false,\r\n        modalText:'Content of the modal',\r\n        optionsData : []\r\n    }\r\n    handleOk =async (e) => {\r\n        \r\n        // 获取输入的数据\r\n        // console.log(this.form.getFieldValue()) \r\n        //          添加的类名  添加所在的父类\r\n        const {caregoryName,parentCaregory} = this.form.getFieldValue()\r\n        if(caregoryName===undefined||caregoryName===''){\r\n            console.log('输入框有空值')\r\n            message.warning('内容不能为空')\r\n            return\r\n        }\r\n        console.log('caregoryName,parentCaregory',caregoryName,parentCaregory)\r\n        // 发送添加类名请求\r\n        let result =await reqAddCotegory(parentCaregory,caregoryName)\r\n        if (result.status === 0) {\r\n            message.success('添加成功')\r\n        }else{\r\n            message.error('添加失败')\r\n        }\r\n        //更新目录 \r\n        // 如果当前展示的列表与更新要添加的列表无关，那不需要任何操作\r\n        const {parentId} = this.props//当前展示的父类id\r\n        // 当前展示的父类id 和要添加到的父类id想通过，那么更新本页\r\n        if(parentId === parentCaregory){\r\n            if(parentCaregory ==='0'){\r\n                this.props.showCategory()\r\n            }else{\r\n                const title = this.props.title\r\n                this.props.showSonCategory(parentCaregory,title)\r\n            }\r\n        }else{\r\n            // 添加的类名与当前页无关  什么都不做\r\n        }\r\n        \r\n        \r\n        // 关闭弹出框\r\n        this.handleCancel()\r\n\r\n    };\r\n    handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        this.props.changeModelStatus(0)\r\n    };\r\n    onFinish = (values) => {\r\n        console.log('Success:', values);\r\n    };\r\n    // 下拉框改变时\r\n    // handleChange = (value)=>{\r\n    //     console.log(`selected ${value}`);\r\n    // }\r\n    onSearch = (val) =>{\r\n        console.log('search:', val);\r\n    }\r\n    onFocus=()=> {\r\n        console.log('focus');\r\n    }\r\n    onBlur=()=> {\r\n        console.log('blur');\r\n    }\r\n    onChange=(value)=> {\r\n        console.log(`selected ${value}`);\r\n    }\r\n    \r\n    static getDerivedStateFromProps(props,state){\r\n        // console.log(props,state)\r\n        const {viewModleStaus,CateDataArr} = props\r\n        // render之前 先获取 当前的category列表渲染到\r\n        if (viewModleStaus===2) {\r\n            console.log('sssssss=====2')\r\n            return {\r\n                visible:true,\r\n                optionsData:CateDataArr\r\n            }\r\n        }else{\r\n            return {visible:false}\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // console.log('DidMount',this.form)\r\n        const {parentId} = this.state\r\n        this.form&&this.form.setFieldsValue(()=>({ parentCaregory:parentId  }))\r\n    }\r\n    componentWillUnmount(){\r\n        console.log('will mount')\r\n    }\r\n    \r\n    \r\n    render() {\r\n        const {visible,confirmLoading,optionsData} = this.state\r\n        const {parentId} = this.props\r\n        return (\r\n            <Modal\r\n                title=\"Title\"\r\n                visible={visible}\r\n                onOk={this.handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={this.handleCancel}\r\n            >\r\n                {/* 表单 */}\r\n                <Form ref = {c=>this.form = c}  name=\"basic\" labelCol={{ pan: 8, }}\r\n                    wrapperCol={{ span: 16, }}\r\n                    initialValues={{ parentCaregory:parentId  }}\r\n                    onFinish={this.onFinish}\r\n                    >\r\n                    <Item label='父级' name='parentCaregory'>\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: 200 }}\r\n                            placeholder=\"Select a person\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={this.onChange}\r\n                            onFocus={this.onFocus}\r\n                            onBlur={this.onBlur}\r\n                            onSearch={this.onSearch}\r\n                            value ={parentId}\r\n                            // defaultValue= {parentId||''}\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                // console.log(option)\r\n                            }\r\n                        >\r\n                            <Option value=\"0\">一级目录</Option>\r\n                            {optionsData.map((data) => {\r\n                                return (\r\n                                    <Option  value={data._id} key = {data._id}>{data.name}</Option>\r\n                                )\r\n                            })}\r\n                        </Select>\r\n                    </Item>\r\n                    \r\n                    <Item  label=\"请输入类名\" name=\"caregoryName\" \r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '类名不能为空',\r\n                            },\r\n                        ]}\r\n                    >\r\n\r\n                        <Input />\r\n                    </Item>\r\n                    \r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n  \r\n","import React, { Component } from 'react'\r\nimport {Modal,Form, Input,Select, message} from 'antd'\r\nimport {reqUpdataCotegory} from '../../../../api'\r\nconst {Item} = Form;\r\nconst {Option} = Select\r\nexport default class Updata_Category extends Component {\r\n    state = {\r\n        visible:false,\r\n        confirmLoading:false,\r\n        modalText:'Content of the modal',\r\n    }\r\n    handleOk = async(e) => {\r\n        // this.setState({\r\n        //     modalText:'The modal will be closed after two seconds',\r\n        //     confirmLoading:true,\r\n        // })\r\n        // setTimeout(() => {\r\n        //     this.setState({\r\n        //         confirmLoading:false,\r\n        //     })\r\n        //     this.handleCancel()\r\n           \r\n        // }, 2000);\r\n        // console.log(this.form)\r\n\r\n        // 获取输入的数据\r\n        // console.log(this.formRef.getFieldValue()) \r\n        const {caregoryName}= this.formRef.getFieldValue()\r\n        const {_id,parentId} = this.props.updataObj\r\n\r\n        if(caregoryName===undefined||caregoryName===''){\r\n            message.warning('内容不能为空')\r\n            return\r\n        }\r\n\r\n        // 发送更新类名请求\r\n        let result =  await reqUpdataCotegory(_id,caregoryName);\r\n        if (result.status===0) {\r\n            message.success('更新成功')\r\n        }\r\n        //  重新渲染目录\r\n        if (parentId === '0') {\r\n            this.props.showCategory()\r\n        }else{\r\n            this.props.showSonCategory(parentId,caregoryName)\r\n        }\r\n        \r\n        // 关闭弹出框\r\n        this.handleCancel()\r\n\r\n    };\r\n    handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        // this.form.setFieldsValue('')\r\n        this.props.changeModelStatus(0)\r\n        console.log('form',this.formRef)\r\n        \r\n        // console.log(form.setFieldsValue('sssss'))\r\n    };\r\n    onFinish = (values) => {\r\n        console.log('Success:', values);\r\n    };\r\n    \r\n    static getDerivedStateFromProps(props,state){\r\n        // console.log(props,state)\r\n        const {viewModleStaus,updataObj} = props\r\n        // render之前 先获取 当前的category列表渲染到\r\n        if (viewModleStaus===1) {\r\n            console.log('sssssss=====1')\r\n            return {\r\n                visible:true,\r\n                updataObj\r\n            }\r\n        }else{\r\n            return {visible:false}\r\n        }\r\n    }\r\n    \r\n   componentDidMount(){\r\n       console.log('componentDId')\r\n        // 动态更新输入框中 的数据\r\n        const {updataObj} =this.props\r\n    //    this.formRef&&this.formRef.setFieldsValue(()=>({ caregoryName: updataObj.name }))\r\n   }\r\n    \r\n    render() {\r\n       \r\n        const {visible,confirmLoading} = this.state\r\n        const {updataObj} = this.props\r\n        return (\r\n            <Modal\r\n                title=\"Title\"\r\n                visible={visible}\r\n                onOk={this.handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={this.handleCancel}\r\n            >\r\n                {/* 表单 */}\r\n                <Form ref = {c=>{this.formRef = c}}  name=\"basic\" labelCol={{ pan: 8, }}\r\n                    wrapperCol={{ span: 16, }}\r\n                    initialValues={{ remember: false,caregoryName: updataObj.name }}\r\n                    onFinish={this.onFinish}\r\n                    \r\n                    >\r\n                    <Item  label={updataObj.name} name=\"caregoryName\" \r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请输入新的非空类名',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        \r\n                        <Input   />\r\n                    </Item>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n  \r\n","import React, { Component } from 'react'\r\nimport {Card,Table, Space,message,Button} from 'antd'\r\nimport {ArrowRightOutlined,PlusOutlined} from '@ant-design/icons'\r\nimport {reqGetCotegory} from '../../../api'\r\nimport Add_Category from './Add-Category'\r\nimport Updata_Category from './Updata-Category'\r\nexport default class Category extends Component {\r\n\r\n    state = {\r\n        CateDataArr : [],\r\n        loading:true,\r\n        scendCateDataArr:[],\r\n        parentId:'0',\r\n        title:'',\r\n        result:[],\r\n        viewModleStaus:0,//0：两个谈话框都关闭，1：更新弹出, 2：add弹出，\r\n        updataObj:{}\r\n    }\r\n\r\n    // 获取数据\r\n    getAllCategory = async (parentId,callback)=>{\r\n        // 开始获取必定要更改loading的属性\r\n        this.setState({loading:true})\r\n        //获取一级目录\r\n        const result = await reqGetCotegory(parentId);\r\n        if (result && result.status===0) {\r\n            this.setState({\r\n                result:result.data,\r\n            },callback)\r\n        }else{\r\n            console.log(result)\r\n            message.error('获取数据出错')\r\n        }\r\n    }\r\n    // 展示二级类名\r\n    showSonCategory = (_id,name)=>{\r\n        this.getAllCategory(_id,()=>{\r\n            const {scendCateDataArr,result} = this.state\r\n            // 保存到category中\r\n            const newSonCategory =[...result];\r\n            this.setState({\r\n                scendCateDataArr:newSonCategory,\r\n                loading:false,\r\n                parentId:_id,//\r\n                title:name,\r\n            },()=>{\r\n                // console.log(this.state)\r\n            })\r\n            \r\n        });\r\n        \r\n    }\r\n    // 展示一级类名\r\n    showCategory = ()=>{\r\n        this.getAllCategory('0',()=>{\r\n            let {result,title} = this.state\r\n            console.log(result)\r\n            // 保存到category中\r\n            const newCategory =[...result];\r\n            this.setState({\r\n                CateDataArr:newCategory,\r\n                loading:false,\r\n                parentId:'0'\r\n                // parentId默认是0\r\n            },(params) => {\r\n                // console.log(this.state.CateDataArr)\r\n            })\r\n        });//result \r\n        \r\n    }\r\n\r\n    //   改变类名\r\n    changeCategoryName = (_id,name,parentId)=>{\r\n        \r\n        // 弹出输入框\r\n        // 获取内容\r\n        // 发送更改请求\r\n        this.changeModelStatus(1)\r\n        this.setState({updataObj:{_id,name,parentId}})\r\n    }\r\n\r\n    // 改变Model状态\r\n    changeModelStatus = (status) => {\r\n        this.setState({\r\n            viewModleStaus:status\r\n        })\r\n    }\r\n    \r\n    \r\n    // 添加数据\r\n    addCategory =async (params) => {\r\n        // let result = await reqAddCotegory()\r\n        this.changeModelStatus(2);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // send  req for get data\r\n        this.showCategory();\r\n\r\n        // 初始化列,并把它挂在class上\r\n        this.columns =[\r\n            {\r\n              title: '类名',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n              \r\n            },\r\n            {\r\n              title: '操作',\r\n              key: 'action',\r\n              width:300,\r\n              render: (text, record) => {\r\n                  const {_id,name,parentId} =text\r\n                  return (\r\n                            <Space size=\"middle\">\r\n                            {this.state.parentId==='0'?<Button type='link' onClick = {()=>this.showSonCategory(_id,name)}>查看子类</Button>:''}\r\n                            <Button type='link' onClick = {()=>this.changeCategoryName(_id,name,parentId)} > 更改类名</Button>\r\n                            </Space>\r\n                            )\r\n              }\r\n              ,\r\n            },\r\n          ];\r\n    }\r\n    render() {\r\n        const {CateDataArr,loading,title,parentId,scendCateDataArr,viewModleStaus,updataObj} = this.state\r\n        console.log('gengxin',viewModleStaus)\r\n        return (\r\n            <div>\r\n                <Card title={parentId ==='0'?'一级类名':<Space size=\"middle\"> <Button type='link' onClick = {this.showCategory}>一级类名</Button> <ArrowRightOutlined /> {title} </Space>} \r\n                extra={<Button type=\"primary\" shape=\"round\" size='large' icon ={<PlusOutlined />} onClick = {this.addCategory}/>} >\r\n                    <Table columns={this.columns} dataSource={parentId==='0'?CateDataArr:scendCateDataArr} \r\n                         bordered={true} size = 'small' \r\n                         loading ={loading}\r\n                         pagination = {{ position: ['bottomCenter '],showQuickJumper:true }}\r\n                         rowKey = {record => record._id}\r\n                         \r\n                    />\r\n                    {\r\n                        viewModleStaus ===0?null:\r\n                        viewModleStaus ===1?<Updata_Category showSonCategory = {this.showSonCategory} showCategory = {this.showCategory} updataObj = {updataObj}  changeModelStatus ={this.changeModelStatus} viewModleStaus = {viewModleStaus}  />:\r\n                        viewModleStaus ===2?<Add_Category {...this.state}  showCategory={this.showCategory} showSonCategory = {this.showSonCategory}  changeModelStatus ={this.changeModelStatus}  />:null\r\n                    }\r\n                \r\n                \r\n                \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component,Fragment } from 'react'\r\nimport {Card,Button} from 'antd'\r\n\r\nimport ReactECharts from 'echarts-for-react';\r\nexport default class Bar extends Component {\r\n\r\n    state= {\r\n        seals : [25,32,85,45,92,15]\r\n    }\r\n    update = () => {\r\n        this.setState(state=>{\r\n            let newseals = state.seals.map(v=>v+parseInt(Math.random()*10))\r\n            // console.log(newseals)\r\n            return {seals:newseals}\r\n        })\r\n    }\r\n    getOption = (seals) => {\r\n        return {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: seals\r\n            }]\r\n        };\r\n    }\r\n    render() {\r\n\r\n        // console.log(this.state.seals)\r\n        return (\r\n            <Fragment>\r\n                <Card >\r\n                    <Button type='primary' onClick = {this.update}>更新</Button>\r\n                </Card>\r\n                <Card title=''>\r\n                    <ReactECharts option={this.getOption(this.state.seals)} />\r\n                </Card>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component,Fragment } from 'react'\r\nimport {Card,Button} from 'antd'\r\n\r\nimport ReactECharts from 'echarts-for-react';\r\nexport default class Line extends Component {\r\n\r\n    update = () => {\r\n        \r\n    }\r\n    splitData=(rawData) =>{\r\n        var categoryData = [];\r\n        var values = [];\r\n        for (var i = 0; i < rawData.length; i++) {\r\n            categoryData.push(rawData[i][0]);\r\n            rawData[i][0] = i;\r\n            values.push(rawData[i]);\r\n        }\r\n        return {\r\n            categoryData: categoryData,\r\n            values: values\r\n        };\r\n    }\r\n    \r\n    \r\n    renderItem =(params, api)=> {\r\n        var xValue = api.value(0);\r\n        var openPoint = api.coord([xValue, api.value(1)]);\r\n        var closePoint = api.coord([xValue, api.value(2)]);\r\n        var lowPoint = api.coord([xValue, api.value(3)]);\r\n        var highPoint = api.coord([xValue, api.value(4)]);\r\n        var halfWidth = api.size([1, 0])[0] * 0.35;\r\n        var style = api.style({\r\n            stroke: api.visual('color')\r\n        });\r\n    \r\n        return {\r\n            type: 'group',\r\n            children: [{\r\n                type: 'line',\r\n                shape: {\r\n                    x1: lowPoint[0], y1: lowPoint[1],\r\n                    x2: highPoint[0], y2: highPoint[1]\r\n                },\r\n                style: style\r\n            }, {\r\n                type: 'line',\r\n                shape: {\r\n                    x1: openPoint[0], y1: openPoint[1],\r\n                    x2: openPoint[0] - halfWidth, y2: openPoint[1]\r\n                },\r\n                style: style\r\n            }, {\r\n                type: 'line',\r\n                shape: {\r\n                    x1: closePoint[0], y1: closePoint[1],\r\n                    x2: closePoint[0] + halfWidth, y2: closePoint[1]\r\n                },\r\n                style: style\r\n            }]\r\n        };\r\n    }\r\n    \r\n\r\n    getOption = () => {\r\n        return {\r\n            title: {\r\n              text: '堆叠区域图'\r\n            },\r\n            tooltip : {\r\n              trigger: 'axis'\r\n            },\r\n            legend: {\r\n              data:['邮件营销','联盟广告','视频广告']\r\n            },\r\n            toolbox: {\r\n              feature: {\r\n                saveAsImage: {}\r\n              }\r\n            },\r\n            grid: {\r\n              left: '3%',\r\n              right: '4%',\r\n              bottom: '3%',\r\n              containLabel: true\r\n            },\r\n            xAxis : [\r\n              {\r\n                type : 'category',\r\n                boundaryGap : false,\r\n                data : ['周一','周二','周三','周四','周五','周六','周日']\r\n              }\r\n            ],\r\n            yAxis : [\r\n              {\r\n                type : 'value'\r\n              }\r\n            ],\r\n            series : [\r\n              {\r\n                name:'邮件营销',\r\n                type:'line',\r\n                stack: '总量',\r\n                areaStyle: {normal: {}},\r\n                data:[120, 132, 101, 134, 90, 230, 210]\r\n              },\r\n              {\r\n                name:'联盟广告',\r\n                type:'line',\r\n                stack: '总量',\r\n                areaStyle: {normal: {}},\r\n                data:[220, 182, 191, 234, 290, 330, 310]\r\n              },\r\n              {\r\n                name:'视频广告',\r\n                type:'line',\r\n                stack: '总量',\r\n                areaStyle: {normal: {}},\r\n                data:[150, 232, 201, 154, 190, 330, 410]\r\n              }\r\n            ]\r\n          };\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Card title=''>\r\n                    <ReactECharts option={this.getOption()} />\r\n                </Card>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component,Fragment } from 'react'\r\nimport {Card,Button} from 'antd'\r\n\r\nimport ReactECharts from 'echarts-for-react';\r\nexport default class Pie extends Component {\r\n\r\n    update = () => {\r\n        \r\n    }\r\n    getOption = () => {\r\n        return {\r\n            legend: {\r\n                top: 'bottom'\r\n            },\r\n            toolbox: {\r\n                show: true,\r\n                feature: {\r\n                    mark: {show: true},\r\n                    dataView: {show: true, readOnly: false},\r\n                    restore: {show: true},\r\n                    saveAsImage: {show: true}\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    name: '面积模式',\r\n                    type: 'pie',\r\n                    radius: [50, 250],\r\n                    center: ['50%', '50%'],\r\n                    roseType: 'area',\r\n                    itemStyle: {\r\n                        borderRadius: 8\r\n                    },\r\n                    data: [\r\n                        {value: 40, name: 'rose 1'},\r\n                        {value: 38, name: 'rose 2'},\r\n                        {value: 32, name: 'rose 3'},\r\n                        {value: 30, name: 'rose 4'},\r\n                        {value: 28, name: 'rose 5'},\r\n                        {value: 26, name: 'rose 6'},\r\n                        {value: 22, name: 'rose 7'},\r\n                        {value: 18, name: 'rose 8'}\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Card title='' style={{height:500}}>\r\n                    <ReactECharts \r\n                        option={this.getOption()} \r\n                        style={{height:450,width:'100%'}}\r\n                    />\r\n                    {/* <ReactECharts option={this.getOption()} /> */}\r\n                </Card>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"layui-fluid\">\r\n        <div className=\"layui-row layui-col-space15\">\r\n            <div className=\"layui-col-md12\">\r\n                <div className=\"layui-card\">\r\n                    <div className=\"layui-card-body \">\r\n                        <blockquote className=\"layui-elem-quote\">欢迎管理员：\r\n                            <span className=\"x-red\">test</span>！当前时间: <span id=\"nowtime\"></span>\r\n                        </blockquote>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"layui-col-md12\">\r\n                <div className=\"layui-card\">\r\n                    <div className=\"layui-card-header\">数据统计</div>\r\n                    <div className=\"layui-card-body \">\r\n                        <ul className=\"layui-row layui-col-space10 layui-this x-admin-carousel x-admin-backlog\">\r\n                            <li className=\"layui-col-md2 layui-col-xs6\">\r\n                                <a href=\"#\" className=\"x-admin-backlog-body\">\r\n                                    <h3>总考试次数</h3>\r\n                                    <p>\r\n                                        <cite>121</cite></p>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"layui-col-md2 layui-col-xs6\">\r\n                                <a href=\"#\" className=\"x-admin-backlog-body\">\r\n                                    <h3>优秀次数</h3>\r\n                                    <p>\r\n                                        <cite>110</cite></p>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"layui-col-md2 layui-col-xs6\">\r\n                                <a href=\"#\" className=\"x-admin-backlog-body\">\r\n                                    <h3>及格次数</h3>\r\n                                    <p>\r\n                                        <cite>99</cite></p>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"layui-col-md2 layui-col-xs6\">\r\n                                <a href=\"#\" className=\"x-admin-backlog-body\">\r\n                                    <h3>总达标次数</h3>\r\n                                    <p>\r\n                                        <cite>67</cite></p>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"layui-col-md2 layui-col-xs6\">\r\n                                <a href=\"#\" className=\"x-admin-backlog-body\">\r\n                                    <h3>不及格次数</h3>\r\n                                    <p>\r\n                                        <cite>67</cite></p>\r\n                                </a>\r\n                            </li>\r\n                            <li className=\"layui-col-md2 layui-col-xs6 \">\r\n                                <a href=\"#\" className=\"x-admin-backlog-body\">\r\n                                    <h3>未考次数</h3>\r\n                                    <p>\r\n                                        <cite>6766</cite></p>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"layui-col-sm6 layui-col-md3\">\r\n                <div className=\"layui-card\">\r\n                    <div className=\"layui-card-header\">科目数量\r\n                        <span className=\"layui-badge layui-bg-cyan layuiadmin-badge\">学期</span></div>\r\n                    <div className=\"layui-card-body  \">\r\n                        <p className=\"layuiadmin-big-font\">12</p>\r\n                        <p>新增率\r\n                            <span className=\"layuiadmin-span-color\">10%\r\n                                    <i className=\"layui-inline layui-icon layui-icon-face-smile-b\"></i></span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"layui-col-sm6 layui-col-md3\">\r\n                <div className=\"layui-card\">\r\n                    <div className=\"layui-card-header\">挂科数量\r\n                        <span className=\"layui-badge layui-bg-cyan layuiadmin-badge\">学期</span></div>\r\n                    <div className=\"layui-card-body \">\r\n                        <p className=\"layuiadmin-big-font\">0</p>\r\n                        <p>新增率\r\n                            <span className=\"layuiadmin-span-color\">0%\r\n                                    <i className=\"layui-inline layui-icon layui-icon-face-smile-b\"></i></span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"layui-col-sm6 layui-col-md3\">\r\n                <div className=\"layui-card\">\r\n                    <div className=\"layui-card-header\">及格数量\r\n                        <span className=\"layui-badge layui-bg-cyan layuiadmin-badge\">学期</span></div>\r\n                    <div className=\"layui-card-body \">\r\n                        <p className=\"layuiadmin-big-font\">12</p>\r\n                        <p>新增率\r\n                            <span className=\"layuiadmin-span-color\">0%\r\n                                    <i className=\"layui-inline layui-icon layui-icon-face-smile-b\"></i></span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"layui-col-sm6 layui-col-md3\">\r\n                <div className=\"layui-card\">\r\n                    <div className=\"layui-card-header\">班级排名\r\n                        <span className=\"layui-badge layui-bg-cyan layuiadmin-badge\">学期</span></div>\r\n                    <div className=\"layui-card-body \">\r\n                        <p className=\"layuiadmin-big-font\">35</p>\r\n                        <p>新增率\r\n                            <span className=\"layuiadmin-span-color\">5%\r\n                                    <i className=\"layui-inline layui-icon layui-icon-face-smile-b\"></i></span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"layui-col-md12\">\r\n                <div className=\"layui-card\">\r\n                    <div className=\"layui-card-header\">个人基本信息</div>\r\n                    <div id=\"JiBenMsg\" className=\"layui-card-body \">\r\n                        <table className=\"layui-table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>学号</th>\r\n                                    <td>1.0.180420</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>姓名</th>\r\n                                    <td>x.xuebingsi.com</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>性别</th>\r\n                                    <td>WINNT</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>班主任</th>\r\n                                    <td>Apache/2.4.23 (Win32) OpenSSL/1.0.2j mod_fcgid/2.3.9</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>班级</th>\r\n                                    <td>5.6.27</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>班级</th>\r\n                                    <td>cgi-fcgi</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>系名</th>\r\n                                    <td>5.5.53</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>宿舍</th>\r\n                                    <td>5.0.18</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>导员名</th>\r\n                                    <td>2M</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>QQ</th>\r\n                                    <td>30s</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>个人简介</th>\r\n                                    <td>86015.2M</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"layui-col-md12\">\r\n\r\n            </div>\r\n            <style id=\"welcome_style\"></style>\r\n            <div className=\"layui-col-md12\">\r\n                <blockquote className=\"layui-elem-quote layui-quote-nm\">主界面（桌面），显示当前用户的基本信息</blockquote>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react'\r\nimport { Upload, Modal, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport {reqDeleteImg} from '../../../../api'\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        let fileList = [];\r\n        if(this.props.isUpdate){\r\n            fileList = this.props.images.map((img,index) => {\r\n                return {\r\n                    uid:'-'+index,\r\n                    percent: 50,\r\n                    name: img,\r\n                    status: 'done',\r\n                    url: '/api1//upload/'+img,//查看地址\r\n                  }\r\n            })\r\n        }\r\n        this.state = {\r\n            previewVisible: false,//是否预览\r\n            previewImage: '',//预览的图片\r\n            previewTitle: '',//与预览名\r\n            fileList,\r\n        \r\n        };\r\n    }\r\n  \r\n\r\n//   getFileList = () => {\r\n      \r\n//   }\r\n\r\n// 得到整理数据，传递给form 父级\r\n    imgsDataToFather = () => {\r\n        const imgsData = this.state.fileList.map(file=>file.name);\r\n        this.props.getImgDataToForm(imgsData);\r\n    }\r\n\r\n  deleteImg =async (name) => {\r\n      const result = await reqDeleteImg(name);\r\n\r\n      if (name === ''||result.status ===0) {\r\n          message.success('删除图片成功');\r\n        //   删除成功j将现有的图片列表返回给forn\r\n        this.imgsDataToFather();\r\n      }else{\r\n          message.error('图片删除失败')\r\n      }\r\n  }\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n\r\n\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  handleChange = ({ fileList,file }) =>{\r\n      console.log('change',fileList)\r\n      console.log('change-file',file)\r\n\r\n    //   上传成功\r\n      if (file.status === 'done') {\r\n          message.success('上传成功',1);\r\n        // 重新设置名字和url\r\n        const newfile = fileList[fileList.length-1];\r\n        newfile.name = file.response.data.name;\r\n        newfile.url = '/api1/upload/'+newfile.name;\r\n\r\n        \r\n      }\r\n      if (file.status === \"removed\") {\r\n        this.deleteImg(file.name);\r\n      }\r\n    //   更新数据\r\n      this.setState({ fileList })\r\n\r\n      // 数据更新。上传数据给父级\r\n      this.imgsDataToFather();\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <>\r\n        <Upload\r\n          accept ='image/*' //接受上传的文件类型\r\n          name\t='image' //发到后台的文件参数名\r\n          action=\"/api1/manage/img/upload\" //上传的地址\r\n          listType=\"picture-card\"   //上传列表的内建样式，支持三种基本样式 text, picture 和 picture-card  展示出来的样式\r\n          fileList={fileList}   //图片列表\r\n          onPreview={this.handlePreview} //点击预览的回调\r\n          onChange={this.handleChange}  //状态改变的回调 上传中、完成、失败都会调用这个函数。\r\n        >\r\n            {/*//超过8个文件就不出现上传按钮  */}\r\n          {fileList.length >= 8 ? null : uploadButton} \r\n        </Upload>\r\n\r\n        {/* 预览组件 */}\r\n        <Modal\r\n          visible={previewVisible}  //是否预览\r\n          title={previewTitle}  //预览图名\r\n          footer={null} //\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nimport './index.css'\r\n\r\nexport default class EditorConvertToHTML extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const html = this.props.detail;\r\n    const contentBlock = htmlToDraft(html);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.state = {\r\n        editorState,\r\n      };\r\n    }\r\n  }\r\n\r\n   uploadImageCallBack =(file)=> {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', '/api1/manage/img/upload');\r\n        // xhr.setRequestHeader('Authorization', 'Client-ID XXXXX');\r\n        const data = new FormData();\r\n        data.append('image', file);\r\n        xhr.send(data);\r\n        xhr.addEventListener('load', () => { \r\n          const response = JSON.parse(xhr.responseText);\r\n          const url = response.data.url;\r\n          console.log(url)\r\n          resolve({data:{link:url}});\r\n        });\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText);\r\n          reject(error);\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  getDetail = () => {\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    // console.log(editorState)\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      \r\n        <Editor\r\n          localization={{ locale: 'zh' }}\r\n          editorClassName ='eidtor'\r\n          editorState={editorState}\r\n          editorStyle={{border:'1px solid balck',height:'250px'}}\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          toolbar={{\r\n            // inline: { inDropdown: true },\r\n            // list: { inDropdown: true },\r\n            // textAlign: { inDropdown: true },\r\n            // link: { inDropdown: true },\r\n            // history: { inDropdown: true },\r\n            image: { uploadCallback:this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n          }}\r\n        />\r\n        \r\n        \r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport {Card,Form,Input,Button,Space,Cascader, message } from 'antd'\r\nimport {ArrowLeftOutlined} from '@ant-design/icons'\r\nimport PictureWall from './picture-wall'\r\nimport EditorConvertToHTML from './RichTextEditor'\r\nimport {reqGetCotegory,reqAddOrUpdateProduct} from '../../../../api'\r\nconst {Item} = Form ;\r\nconst { TextArea } = Input;//文本域\r\n\r\nexport default class Add_Uptate extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.isUpdate = !!this.props.location.state;\r\n        // 更新时\r\n        if (this.isUpdate) {\r\n            this.updateValue = this.props.location.state;//更新时一定有值\r\n            this.initUpdate();\r\n        }\r\n\r\n        // ref\r\n        this.EditorRef = React.createRef();\r\n        \r\n    }\r\n\r\n    state = {\r\n        options:[],//分类,\r\n        imgs:[],\r\n    }\r\n\r\n    // 表单提交成功\r\n    onFinish =async (values) => {\r\n        const {name,desc,price,category} = values;\r\n        // 分类\r\n\r\n        const pCategoryId = category.length>1?category[0]:'0'\r\n        const categoryId = category.length>1?category[1]:category[0]\r\n        //图片\r\n        const {imgs} = this.state;\r\n        // 描述\r\n        let detail =this.EditorRef.current.getDetail()\r\n        // 获取数据\r\n        const data = {\r\n            name,desc,price,pCategoryId,categoryId,\r\n            imgs ,\r\n            detail,\r\n        }\r\n        \r\n        // 是否属于更新\r\n        if(this.isUpdate){\r\n            data._id = this.props.location.state._id;\r\n        }\r\n\r\n        // 发送更新/添加请求\r\n        const result = await reqAddOrUpdateProduct(data);\r\n        if (result.status === 0) {\r\n            message.success(this.isUpdate?'更新成功':'添加成功')\r\n        }else{\r\n            message.error('操作失败')\r\n        }\r\n\r\n    };\r\n    // 表单提交失败\r\n    onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n         // 图片数据的更新呢  => 通过this.state.imgs获取\r\n         console.log(this.state.imgs)\r\n         //描述数据\r\n         console.log('detail',this.EditorRef.current.getDetail()) \r\n\r\n    };\r\n\r\n    // 获取子组件的imgs数据\r\n    getImgDataToForm = (imgs)=>{\r\n        this.setState({imgs})\r\n    }\r\n    // 文本框的改变\r\n    TextAreaonChange = (e) => {\r\n        console.log('Change:', e.target.value);\r\n    }\r\n    // ====================================================价格====================\r\n    // 价格的验证 大于0\r\n    checkPrice = (_,value) => {\r\n        console.log(Number(value))\r\n        if (Number(value) > 0) {\r\n            return Promise.resolve();\r\n        }\r\n    \r\n        return Promise.reject(new Error('价格必须大于0'));\r\n    }\r\n    // \r\n    selectOnChange = (value, selectedOptions) => {\r\n        console.log(value, selectedOptions);\r\n    };\r\n\r\n    // ====================================================分类====================\r\n\r\n    // 初始化options   更改state中的options\r\n    initOptions =async optionsData=>{\r\n        // optionsData是拥有多个属性的对象数组\r\n        const options = optionsData.map((categgory) => {\r\n            const {_id,name} = categgory\r\n            return {value:_id,label:name,isLeaf:false}\r\n        })\r\n         this.setState({options})\r\n\r\n        if (this.isUpdate) {\r\n            const {pCategoryId} = this.props.location.state;\r\n            // 一级更新\r\n            if(pCategoryId === '0') return;\r\n            // 二级更新\r\n            const subCategoryData =await this.getCotegorys(pCategoryId);\r\n\r\n            let selectOptions =  options.find(obj=>obj.value === pCategoryId);\r\n            const childrenData = subCategoryData.map((categgory) => {\r\n                const {_id,name} = categgory\r\n                return {value:_id,label:name,isLeaf:true}\r\n            })\r\n            // 设置选中option的子级\r\n            selectOptions.children = childrenData\r\n            // 更新options\r\n            this.setState({options:[...options]})\r\n\r\n        }\r\n        \r\n       \r\n    }\r\n\r\n    // 发送获取分类请求  根据父类id\r\n    getCotegorys =async (parent_id)=>{\r\n        const result = await reqGetCotegory(parent_id);\r\n\r\n        // 是否请求成功\r\n        if(result&&result.status === 0){//成功 \r\n            // 发送的是请求一级还是二级\r\n            if(parent_id === '0'){//一级\r\n                this.initOptions(result.data)\r\n            }else{\r\n                // 二级 返回subCategory\r\n                return result.data\r\n            }\r\n\r\n        }\r\n    }\r\n    \r\n    // 加载父类拥有的子类\r\n    loadData =async selectedOptions => {\r\n        // 获取当前父类数据\r\n        const {options} =this.state\r\n        // console.log('selectedOptions,',selectedOptions)\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];// 选中的option 拥有childer， isLeaf,lableloading,value\r\n        // 正在加载\r\n        targetOption.loading = true;\r\n        // 发送请求获取subCategory数据 \r\n        const subCategoryData = await this.getCotegorys(targetOption.value)  //因为getCotegorys是一个async函数，它的返回值是一个promise\r\n        // 如果没有子类\r\n        if(subCategoryData.length === 0){\r\n            targetOption.isLeaf = true\r\n        }\r\n        // 处理数据\r\n        const childrenData = subCategoryData.map((categgory) => {\r\n            const {_id,name} = categgory\r\n            return {value:_id,label:name,isLeaf:true}\r\n        })\r\n        // 加载完成\r\n        targetOption.loading = false;\r\n        \r\n        // 设置选中option的子级\r\n        targetOption.children = childrenData\r\n        // 更新options\r\n        this.setState({options:[...options]})\r\n    };\r\n    \r\n\r\n    // 初始化更新的数据 \r\n    initUpdate = () => {\r\n         const {name,desc,price,detail,pCategoryId,categoryId,imgs} =this.props.location.state\r\n\r\n        //  不同分类级别的商品\r\n        let categgory = pCategoryId === '0'?[categoryId]:[pCategoryId,categoryId]\r\n        /**\r\n         * 可以先把值设置好，之后再去获取数据让select框去选中，没必要先让数据出来之后再去设置值\r\n         */\r\n        // 二级商品得提前获取当前父类的全部子类\r\n        this.initiaValues ={\r\n            name:name,\r\n            desc:desc,\r\n            price:price,\r\n            category:categgory,//根据多种情况决定不同数组\r\n            detail:detail,\r\n            imgs,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // 获取一级分类\r\n        this.getCotegorys('0')\r\n        // \r\n        // console.log(this.EditorRef.current)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const formItemLayout = {\r\n            labelCol: { //左侧文字包裹的宽度\r\n              xs: { span: 24, },\r\n              sm: { span: 4, },\r\n            },\r\n            wrapperCol: { // 右侧包裹的宽度\r\n              xs: {  span: 24, },\r\n              sm: { span: 8, },\r\n            },\r\n          };\r\n\r\n          const title = (\r\n              <Button type='link' onClick = { this.props.history.goBack} icon ={<ArrowLeftOutlined />} size ='large'>返回</Button>\r\n          )\r\n        const {options} = this.state;\r\n        let imgs = [];\r\n        // 如果不是更新\r\n        if (!this.isUpdate) {\r\n            this.initiaValues = {}\r\n        }\r\n        \r\n       \r\n\r\n        return (\r\n            <Card title = {title} >\r\n                <Form {...formItemLayout} onFinish = {this.onFinish} onFinishFailed = {this.onFinishFailed} \r\n                    initialValues = {\r\n                        this.initiaValues\r\n                    }\r\n                >\r\n                    <Item label = '商品名称' name='name' \r\n                        rules ={[\r\n                            {\r\n                                required: true,\r\n                                message: '商品名称不能为空',\r\n                            },\r\n                            {\r\n                                type:'string',\r\n                                whitespace: true,\r\n                                message: '商品名称不能全为空格',\r\n                            },\r\n                        ]} \r\n                    >\r\n                        <Input placeholder = '请输入商品名称'/>\r\n                    </Item>\r\n\r\n                    <Item label = '商品描述' name='desc'  \r\n                        rules ={[\r\n                            {\r\n                                type:'string',\r\n                                required: true,\r\n                                message: '商品描述不能为空',\r\n                            },\r\n                            {\r\n                                type:'string',\r\n                                whitespace: true,\r\n                                message: '商品描述不能为空格',\r\n                            },\r\n                        ]} \r\n                     >\r\n                        <TextArea showCount maxLength={100} onChange={this.TextAreaonChange} placeholder = '请输入商品描述' />\r\n                    </Item>\r\n\r\n                    <Item label = '商品价格' name='price'  type='number'\r\n                        rules ={[\r\n                            {\r\n                                required: true,\r\n                                message: '商品价格不能为空',\r\n                            },\r\n                            {\r\n                                validator:this.checkPrice\r\n                            }\r\n                        ]} \r\n                    >\r\n                        <Input type='number'  addonAfter=\"元\" value={0} placeholder = '请输入价格' />\r\n                    </Item>\r\n                    \r\n                    <Item label = '商品分类' name='category' \r\n                        rules = {[\r\n                            {\r\n                                required:true,\r\n                                message:'请选择商品分类'\r\n                            }\r\n                        ]}\r\n                     >\r\n                        <Cascader options={options} loadData={this.loadData} onChange={this.selectOnChange} changeOnSelect />\r\n                    </Item>\r\n                   \r\n                    <Item label = '商品图片' name='imgs' \r\n                        labelCol= { {//左侧文字包裹的宽度\r\n                            sm: { span: 4, },\r\n                        }}\r\n\r\n                        wrapperCol= { {// 右侧包裹的宽度\r\n                            sm: { span: 12, },\r\n                        }} \r\n                     >\r\n                        <PictureWall images = { this.initiaValues.imgs||[]} getImgDataToForm= {this.getImgDataToForm} isUpdate = {this.isUpdate}/>\r\n                    </Item>\r\n                   \r\n                    <Item label = '商品详情' name='detail' \r\n                        labelCol= { {//左侧文字包裹的宽度\r\n                            sm: { span: 4, },\r\n                        }}\r\n\r\n                        wrapperCol= { {// 右侧包裹的宽度\r\n                            sm: { span: 15, },\r\n                        }} \r\n                    >\r\n\r\n                        <EditorConvertToHTML detail ={this.initiaValues.detail||''} ref = {this.EditorRef} />\r\n                    </Item>\r\n                   \r\n                    <Item label = ' ' colon = {false}>\r\n                        <Button htmlType ='submit' type='primary'>{this.isUpdate?'更新':'添加'}</Button>\r\n                    </Item>\r\n                </Form>\r\n            </Card>   \r\n        )\r\n    }\r\n}\r\n","import React, { Component,Fragment } from 'react'\r\nimport { Card,Button,Divider, message,Image,PageHeader } from 'antd';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { reqGetGoryNameWithId } from '../../../../api'\r\nexport default class Detail extends Component {\r\n    state = {\r\n        categoryName:'',\r\n    }\r\n\r\n    getCategoryName =async () => {\r\n        const {categoryId,pCategoryId} = this.props.location.state\r\n        // 商品属于一级分类\r\n        if(pCategoryId === '0'){\r\n            const result = await reqGetGoryNameWithId(categoryId);\r\n            if (result.status === 0) {\r\n                this.setState({categoryName:result.data.name})\r\n            } else{\r\n                message.error('分类信息获取失败')\r\n            }\r\n        }else{\r\n            // // 商品属于二级分类\r\n            // const result1 = await reqGetGoryNameWithId(categoryId);\r\n            // const result2 = await reqGetGoryNameWithId(pCategoryId);\r\n\r\n            // 利用Promise.all实现发送多个请求\r\n            const results =await Promise.all([reqGetGoryNameWithId(categoryId),reqGetGoryNameWithId(pCategoryId)]);\r\n            console.log(results)\r\n\r\n            if (results[0].status === 0&&results[1].status === 0) {\r\n                this.setState({\r\n                    categoryName:results[1].data.name+'-->'+results[0].data.name\r\n                })\r\n            } else{\r\n                message.error('分类信息获取失败')\r\n            }\r\n        }\r\n    }\r\n\r\n    backHome = () => {\r\n        const {pageNow,searchType,searchWord} = this.props.location.state\r\n        this.props.history.replace('/commodity/product',{pageNow,searchType,searchWord})\r\n    }\r\n    componentDidMount(){\r\n        // 发送获得商品分类的请求\r\n        this.getCategoryName()\r\n    }\r\n\r\n    render() {\r\n        const {desc,detail,imgs,name,price} = this.props.location.state\r\n        this.title =(<Button type='primary'onClick ={this.backHome}  icon = {<ArrowLeftOutlined />}>返回</Button>)\r\n        return (\r\n            <Fragment>\r\n                <Card title={this.title}  style={{ width: '100%' }}>\r\n                    {/* <Divider orientation=\"商品名\">Left Text</Divider> */}\r\n                    <PageHeader\r\n                            title=\"商品名\"\r\n                            subTitle={<span style = {{textAlign:'center',color:'#1DA57A'}}> {name}</span>}\r\n                        />\r\n                    \r\n\r\n                    <Divider orientation=\"left\"></Divider>\r\n                        <PageHeader\r\n                            title=\"商品描述\"\r\n                            subTitle={desc}\r\n                        />\r\n\r\n                    <Divider orientation=\"left\"></Divider>\r\n                    <PageHeader\r\n                            title=\"商品详情\"\r\n                        />\r\n                    <div dangerouslySetInnerHTML  = {{__html:detail}} style ={{padding:'0 25px'}}></div>\r\n                    <Divider orientation=\"left\"></Divider>\r\n                    <PageHeader\r\n                            title=\"图片\"\r\n                        />\r\n                        <Image.PreviewGroup>\r\n                            {imgs.map(imgstr=>(\r\n                                 <Image key ={imgstr} width={200} src={'http://localhost:5000/upload/'+imgstr} />\r\n                            ))}\r\n                        </Image.PreviewGroup>\r\n                        \r\n\r\n                    <Divider orientation=\"left\"></Divider>\r\n                        <PageHeader\r\n                            title=\"当前分类\"\r\n                            subTitle={this.state.categoryName}\r\n                        />\r\n\r\n                    <Divider orientation=\"left\"> </Divider>\r\n                    <PageHeader\r\n                            title=\"价格\"\r\n                            subTitle={price}\r\n                        />\r\n                </Card>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport {Card,Table,Button,Select,Form,Space,Input, message,} from 'antd'\r\nimport {InfoCircleOutlined,ToolOutlined,PlusSquareOutlined,SearchOutlined} from '@ant-design/icons'\r\nimport {reqGetProduct,reqGetProductForSearch,reqUpdateProductStatus} from '../../../../api'\r\nimport { PAGE_SIZE } from '../../../../utils/constances'\r\nconst {Option} = Select\r\nexport default class Home extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        // 组件不是从详情页过来的\r\n        if (this.props.location.state=== undefined) {\r\n            this.pageNow = 1;\r\n            this.state = {\r\n                dataSource:[],\r\n                total:0,\r\n                pageNum:1,\r\n                loading:false,\r\n                searchType:'productName',\r\n                searchWord:''\r\n            }\r\n            console.log('这是第一次')\r\n        }else{\r\n            const {pageNow,searchType,searchWord} = this.props.location.state\r\n            this.pageNow = pageNow;\r\n            this.state = {\r\n                dataSource:[],\r\n                total:0,\r\n                pageNum:pageNow,\r\n                loading:false,\r\n                searchType,\r\n                searchWord,\r\n            }\r\n            console.log('这是返回来的 ',this.pageNow)\r\n        }\r\n\r\n        this.initDataNode();\r\n    }\r\n    \r\n    // 点击搜索\r\n    onFinish = (value) => {\r\n        console.log('submit',value)\r\n        this.setState({\r\n            searchType:value.selectValue,\r\n            searchWord:value.keyword\r\n        },()=>{\r\n            this.getProductForPage(1)\r\n        })\r\n        \r\n    }\r\n\r\n    // 更新上下架状态\r\n    updateProductStatus=async (_id,status) => {\r\n        const newStatus = status === 1?2:1;\r\n        const result= await reqUpdateProductStatus(_id,newStatus);\r\n        if (result.status === 0) {\r\n            message.success(newStatus === 1?'已上架':'已下架');\r\n            // 更新当前页\r\n            this.getProductForPage(this.pageNow)\r\n\r\n        }else{\r\n            message.error('操作失败，请重试')\r\n        }\r\n    }\r\n\r\n    //跳转到详情页\r\n    gotoDetail = (context)=>{\r\n        const {searchType,searchWord} = this.state;\r\n        const pageNow = this.pageNow\r\n        this.props.history.replace('/commodity/product/detail',{...context,pageNow,searchType,searchWord})\r\n    }\r\n\r\n    // 当文本框为空时\r\n    searchNoneWord = (e) => {\r\n        let value = e.target.value\r\n        // 输入框为空时 修改state中的searchWord调用搜索 ,\r\n        if(value !=='') return;\r\n        // 为空\r\n        this.pageNow=1\r\n        this.setState({\r\n            searchWord:'',\r\n            pageNum:1\r\n        },()=>{\r\n            \r\n            this.getProductForPage(1)\r\n        })\r\n        \r\n\r\n    }\r\n    // 初始化node数据\r\n    initDataNode = ()=>{\r\n        const {searchType,searchWord} = this.state\r\n        // 初始化数据\r\n        this.columns = [\r\n            {\r\n              title: '商品名称',\r\n              dataIndex: 'name',\r\n            },\r\n            {\r\n              title: '商品描述',\r\n              dataIndex: 'desc',\r\n            },\r\n            {\r\n              title: '价格',\r\n              dataIndex: 'price',\r\n              render:(text)=>{\r\n                return '￥'+text\r\n              }\r\n            },\r\n            {\r\n              title: '状态',\r\n              dataIndex: 'status',\r\n              render:(status,context)=>{\r\n                  return  (\r\n                      <Space>\r\n                        <span style={{color:status===1?'#1DA57A':'#ef9f2e'}}>\r\n                                {status === 1?'在售':'已下架'} \r\n                        </span>\r\n                        <Button danger={status===1} onClick ={()=>this.updateProductStatus(context._id,status)} type='primary'>\r\n                            {status === 1?'下架':'上架'}\r\n                        </Button>\r\n                      </Space>\r\n                     \r\n                  \r\n                        )\r\n                }\r\n            },\r\n            {\r\n              title: '操作',\r\n              render:(text,context) =>\r\n              {\r\n                return (\r\n                    <Space size=\"middle\">\r\n                      <Button type='primary' \r\n                      onClick = {()=>{this.gotoDetail(context)}} \r\n                      icon={<InfoCircleOutlined />}\r\n                    >\r\n                          详情\r\n                     </Button>\r\n                      <Button type='primary' onClick = {()=> this.props.history.push('/commodity/product/addupdate',context)} icon ={<ToolOutlined />}>修改</Button>\r\n                    </Space>\r\n                  )\r\n              } \r\n            },\r\n          ];\r\n\r\n        // 搜索框\r\n          this.titleNode = (\r\n              <Form name=\"customized_form_controls\" layout=\"inline\"\r\n                    onFinish={this.onFinish}\r\n                    initialValues = {{selectValue:searchType,keyword:searchWord}}\r\n              >\r\n                  {/* 下拉框 */}\r\n                  <Form.Item name=\"selectValue\" >\r\n                        <Select  style={{ width: 150, }} onChange={this.handleChange}>\r\n                            <Option value=\"productName\">按名称搜索</Option>\r\n                            <Option value=\"productDesc\">按描述搜索</Option>\r\n                        </Select>\r\n                  </Form.Item>\r\n\r\n                    {/*  搜索框 */}\r\n                   <Form.Item name='keyword' >\r\n                        <Input placeholder=\"关键字\"prefix = {<SearchOutlined style={{ fontSize: '20px', color: '#1DA57A' }} />} onChange = {this.searchNoneWord}\r\n                                style = {{}} \r\n                        />\r\n                   </Form.Item>\r\n\r\n                  <Form.Item  >\r\n                        <Button type=\"primary\"  htmlType=\"submit\" >搜索</Button>\r\n                  </Form.Item>\r\n                  \r\n              </Form>\r\n          )\r\n        // 添加按钮\r\n        this.extraNode =(\r\n            <Button type=\"primary\" onClick = {()=>{this.props.history.push('/commodity/product/addupdate')}} icon={<PlusSquareOutlined  style ={{fontSize : '18px'}}/>} size='large'>\r\n                添加\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    // 翻页\r\n    getProductForPage =async (pageNum) => {\r\n        // 更改loading为true\r\n        this.setState({\r\n            loading:true\r\n        })\r\n\r\n        // 发送请求   =>请求有两个，一个时获取所有，一个时获取搜索的数据\r\n            // 因为翻页功能绑定的是一个函数，那么这个函数就得包含多种情况\r\n        const {searchType,searchWord} = this.state;\r\n        let result =null;\r\n        // 是属于获取全部类\r\n        if (searchWord ==='') {\r\n            console.log('输入框为空')\r\n            result =await reqGetProduct(pageNum,PAGE_SIZE);\r\n        }else{\r\n            console.log('输入框不为空')\r\n            result =await reqGetProductForSearch(pageNum,PAGE_SIZE,searchType,searchWord)\r\n        }\r\n        \r\n        if (result.status===0) {\r\n            // 更新数据\r\n            this.setState({\r\n                loading:false,\r\n                dataSource :result.data.list,\r\n                pageNum,\r\n                total:result.data.total,\r\n                \r\n            })\r\n            // 当前页添加到this中\r\n            this.pageNow = pageNum;\r\n        }else{\r\n            message.error('获取数据失败')\r\n        }\r\n    } \r\n\r\n    handleChange = ()=>{\r\n\r\n    }\r\n   \r\n    componentDidMount(){\r\n        // 一开始打开时this。pageNow为1，若为从详情页跳转过来则回到原来页面\r\n\r\n        this.getProductForPage(this.pageNow)\r\n    }\r\n    render() {\r\n        console.log('render this.pageNow',this.pageNow)\r\n\r\n        const {dataSource,total,loading,pageNum} = this.state\r\n        return (\r\n            <Card title={this.titleNode} extra={this.extraNode} style={{ width: '100%' }}>\r\n\r\n               <Table dataSource={dataSource} \r\n                        columns={this.columns} \r\n                        rowKey = '_id'\r\n                        loading={loading}\r\n                        pagination = {{\r\n                            pageSize:PAGE_SIZE,\r\n                            total:total,\r\n                            onChange:this.getProductForPage,\r\n                            current:pageNum\r\n\r\n                        }}\r\n               />;\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","// 定义一些常量，\r\n\r\nexport const PAGE_SIZE =2;","import React, { Component } from 'react'\r\nimport {Route,Switch,Redirect} from 'react-router-dom'\r\nimport Add_upDate from './Add_Update'\r\nimport Detail from './Detail'\r\nimport Home from './Home'\r\nexport default class Product extends Component {\r\n    render() {\r\n        return (\r\n               <Switch>\r\n                   <Route path='/commodity/product' component = {Home} exact />\r\n                   <Route path='/commodity/product/detail' component = {Detail}  />\r\n                   <Route path='/commodity/product/addupdate' component = {Add_upDate}  />\r\n                   <Redirect to='/commodity/product' />\r\n               </Switch>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Modal,Form, Input,Select, message} from 'antd'\r\nimport {reqAddRole} from '../../../api'\r\nconst {Item} = Form;\r\nconst {Option} = Select\r\nexport default class AddRole extends Component {\r\n    \r\n    state = {\r\n        visible:false,\r\n        confirmLoading:false,\r\n        modalText:'Content of the modal',\r\n        optionsData : []\r\n    }\r\n    // 添加\r\n    handleOk =async (e) => {\r\n        const {roleName} = this.form.getFieldValue()\r\n        if(roleName===undefined||roleName===''){\r\n            console.log('输入框有空值')\r\n            message.warning('内容不能为空')\r\n            return\r\n        }\r\n        // console.log('roleName,',roleName)\r\n        // 发送添加类名请求\r\n        let result =await reqAddRole(roleName)\r\n        if (result.status === 0) {\r\n            message.success('添加成功')\r\n            // 更新父类，重新获取用户列表\r\n            this.props.getRoles();\r\n\r\n        }else{\r\n            message.error('添加失败')\r\n        }\r\n        // 关闭弹出框\r\n        this.handleCancel()\r\n\r\n    };\r\n    // 关闭弹出框\r\n    handleCancel = () => {\r\n        // console.log('Clicked cancel button');\r\n        this.props.changeModelStatus(0)\r\n    };\r\n    \r\n   \r\n    \r\n    static getDerivedStateFromProps(props,state){\r\n        // console.log(props,state)\r\n        const {viewModleStaus} = props\r\n        // render之前 先获取 当前的category列表渲染到\r\n        if (viewModleStaus===2) {\r\n            return {\r\n                visible:true,\r\n            }\r\n        }else{\r\n            return {visible:false}\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n    }\r\n    \r\n    \r\n    \r\n    render() {\r\n        const {visible,} = this.state\r\n        const {} = this.props\r\n        return (\r\n            <Modal\r\n                title=\"Title\"\r\n                visible={visible}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n            >\r\n                {/* 表单 */}\r\n                <Form ref = {c=>this.form = c}  name=\"basic\" labelCol={{ pan: 8, }}\r\n                    wrapperCol={{ span: 16, }}\r\n                    initialValues={{  }}\r\n                    onFinish={this.onFinish}\r\n                    >\r\n                    \r\n                    <Item  label=\"角色名\" name=\"roleName\" \r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '类名不能为空',\r\n                            },\r\n                        ]}\r\n                    >\r\n\r\n                        <Input />\r\n                    </Item>\r\n                    \r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n  \r\n","/**\r\n * 角色管理 ----- 角色配置目录\r\n */\r\nimport React, { Component } from 'react'\r\nimport {Modal,Form, Input, message,Tree} from 'antd'\r\nimport {reqUpdateRole} from '../../../api'\r\nimport {withRouter} from 'react-router-dom'\r\nimport menuConfig from '../../../config/menuConfig'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../../redux/actions/user'\r\nconst {Item} = Form;\r\n\r\nconst treeData = menuConfig\r\n class ConfigRole extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        let {menus} = this.props.role\r\n        // console.log(menus)\r\n        this.state = {\r\n            visible:false,\r\n            menus,\r\n            user:this.props.user\r\n        }\r\n    }\r\n    \r\n\r\n    onSelect = (selectedKeys, info) => {\r\n        // console.log('selected', selectedKeys, info);\r\n    };\r\n    \r\n    onCheck = (checkedKeys, info) => {\r\n        // console.log('onCheck', checkedKeys, info);\r\n        this.setState({menus:checkedKeys});\r\n    };\r\n\r\n\r\n    // 修改权限\r\n    handleOk =async (e) => {\r\n        const {_id} = this.props.role;\r\n        const {menus} = this.state;\r\n        const {username} = this.props.user\r\n        let auth_time = new Date();\r\n        // 发送添加类名请求\r\n        let result =await reqUpdateRole({_id,menus,auth_name:username,auth_time})\r\n        if (result.status === 0) {\r\n            \r\n            \r\n            // 关闭弹出框\r\n            this.handleCancel()\r\n            if(this.props.user.role._id !== _id){\r\n                // 更新父组件状态\r\n                message.success('配置成功')\r\n                this.props.getRoles();\r\n                // return;\r\n            }else{\r\n                 // 退出登录\r\n                 message.warning('当前用户的角色权限已更改！请重新登录')\r\n                 // 清除内容中的用户信息\r\n                 this.props.logout();\r\n                 this.props.history.replace('/login')\r\n            }\r\n            \r\n            \r\n            \r\n        }else{\r\n            message.error(result.msg)\r\n        }\r\n        \r\n\r\n    };\r\n    // 关闭弹出框\r\n    handleCancel = () => {\r\n        // console.log('Clicked cancel button');\r\n        this.props.changeModelStatus(0)\r\n    };\r\n    \r\n   \r\n    \r\n    static getDerivedStateFromProps(props,state){\r\n        // console.log(props,state)\r\n        const {viewModleStaus} = props\r\n        // render之前 先获取 当前的category列表渲染到\r\n        if (viewModleStaus===1) {\r\n            return {\r\n                visible:true,\r\n            }\r\n        }else{\r\n            return {visible:false}\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n    }\r\n    \r\n    \r\n    \r\n    render() {\r\n        const {visible,menus} = this.state\r\n        const {role} = this.props\r\n        return (\r\n            <Modal\r\n                title=\"Title\"\r\n                visible={visible}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n            >\r\n                {/* 表单 */}\r\n                <Form ref = {c=>this.form = c}  name=\"basic\" labelCol={{ pan: 8, }}\r\n                    wrapperCol={{ span: 16, }}\r\n                    initialValues={{ roleName: role.name}}\r\n                    onFinish={this.onFinish}\r\n                    >\r\n                    \r\n                    <Item  label=\"角色名\" name=\"roleName\" \r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '类名不能为空',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input disabled={true}/>\r\n                    </Item>\r\n\r\n                    <Tree\r\n                        checkable\r\n                        // defaultExpandedKeys={['0-0-0', '0-0-1']} //默认展开指定的树节点\r\n                        // defaultSelectedKeys={['0-0-0', '0-0-1']} //默认选中的树节点\r\n                        defaultCheckedKeys={menus} //默认选中复选框的树节点\r\n                        onSelect={this.onSelect}\r\n                        onCheck={this.onCheck}\r\n                        treeData={treeData}\r\n                    />\r\n                    \r\n                </Form>\r\n            \r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  connect(\r\n    state=>({user:state.user}),\r\n    {\r\n        logout\r\n    }\r\n)(withRouter(ConfigRole))\r\n\r\n\r\n  \r\n","import React, { Component } from 'react'\r\nimport {Card,Button,Table,Space} from 'antd'\r\nimport {reqRoles} from '../../api'\r\nimport AddRole from './AddRole'\r\nimport ConfigRole from './ConfigRole'\r\nexport default class Role extends Component {\r\n    state = {\r\n        dataSource:[],\r\n        role:{},\r\n        viewModelStatus:0//0 弹出框都关闭 1：设置角色权限 2：添加角色\r\n    }\r\n\r\n    getRoles = async() => {\r\n        const result =await reqRoles();\r\n        if (result.status === 0) {\r\n            // 每次重新获取或是初始获取，都让role为空\r\n            this.setState({dataSource:result.data,role:{}})\r\n        }\r\n    }\r\n\r\n    onRow = record => {\r\n        return {\r\n          onClick: event => {\r\n            //   console.log('onrow',record)\r\n              this.setState({role:record})\r\n          }, // 点击行\r\n        };\r\n      }\r\n    initNode = () => {\r\n        this.getRoles()\r\n        \r\n        this.columns = [\r\n            {\r\n              title: '角色名称',\r\n              dataIndex: 'name',\r\n            },\r\n            {\r\n              title: '创建时间',\r\n              dataIndex: 'create_time',\r\n              render:(text)=> new Date(text).toLocaleString()\r\n            },\r\n            {\r\n              title: '授权时间',\r\n              dataIndex: 'auth_time',\r\n              render:(text)=> {\r\n                  return text? (new Date(text).toLocaleString()):''\r\n              }\r\n            },\r\n            {\r\n              title: '授权人',\r\n              dataIndex: 'auth_name',\r\n            },\r\n        ];\r\n        \r\n    }\r\n\r\n    onChange = (selectedRowKeys, selectedRows) => {\r\n        // console.log('onChange',selectedRowKeys,selectedRows)\r\n    }\r\n\r\n    changeModelStatus = (viewModelStatus) => {\r\n        this.setState({viewModelStatus})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.initNode()\r\n        \r\n    }\r\n    render() {\r\n        // console.log(this.state.role._id)\r\n        const {dataSource,role,viewModelStatus} = this.state\r\n        const title =( <Space>\r\n            <Button type= 'primary' onClick = {()=>this.changeModelStatus(2)}>创建角色</Button>\r\n            <Button type ='primary' onClick = {()=>this.changeModelStatus(1)} disabled ={!this.state.role._id}>设置角色权限</Button>\r\n            </Space>)\r\n        return (\r\n            <Card title ={title}\r\n            >\r\n                <Table \r\n                    dataSource={dataSource} columns={this.columns} \r\n                    bordered = {true}\r\n                    rowKey = '_id'\r\n                    rowSelection = {{\r\n                        type:'radio',\r\n                        selectedRowKeys :[role._id],\r\n                        onSelect:(record)=>{\r\n                            // console.log('onselct',record)\r\n                            this.setState({role:record})\r\n                        },\r\n                    }}\r\n                    onRow={this.onRow}\r\n                    pagination = {{defaultPageSize:5}}\r\n                />\r\n                {\r\n                    viewModelStatus === 0?null:\r\n                    viewModelStatus === 1?<ConfigRole viewModleStaus ={viewModelStatus} changeModelStatus = {this.changeModelStatus} role = {role} getRoles = {this.getRoles}/>:\r\n                    viewModelStatus === 2?<AddRole viewModleStaus ={viewModelStatus} changeModelStatus = {this.changeModelStatus} getRoles = {this.getRoles} />:null\r\n\r\n                }\r\n            </Card>    \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Modal,Form, Input,Select, message, Button} from 'antd'\r\nimport {reqAddOrUpdateUser} from '../../api'\r\nconst {Item} = Form;\r\nconst {Option} = Select\r\nexport default class AddUpdateModel extends Component {\r\n    \r\n    state = {\r\n        visible:false,\r\n        userdata :{},\r\n        rolesArr : []\r\n    }\r\n    handleOk =async (e) => {\r\n        let _id = this.state.userdata._id;\r\n        // 获取数据\r\n        let value = this.form.getFieldValue();\r\n\r\n        value =_id? {...value,_id:this.props.userdata._id}:value\r\n        // 更新或添加\r\n        this.handleAddAndUpdateUser(value)\r\n        // this.props.userdata._id?this.handleUpdateUser(value):this.handleAddUser(value)\r\n        \r\n        // 关闭弹出框\r\n        this.handleCancel()\r\n\r\n    };\r\n    handleCancel = () => {\r\n        // message.success('测试')\r\n        this.props.changeModelStatus(0)\r\n    };\r\n    onFinish = (values) => {\r\n        console.log('Success:', values);\r\n    };\r\n    onFinishFailed = (values) => {\r\n        console.log('error:', values);\r\n    }\r\n    // 下拉框改变时\r\n    // handleChange = (value)=>{\r\n    //     console.log(`selected ${value}`);\r\n    // }\r\n    \r\n    handleAddAndUpdateUser =async (data) => {\r\n        let str = this.props.userdata._id?'更新':'添加'\r\n        let result = await reqAddOrUpdateUser(data);\r\n        if (result.status === 0) {\r\n            message.success(str+'用户成功')\r\n            // 重新获取列表\r\n            this.props.getUserList();\r\n        }else{\r\n            message.error(result.msg)\r\n        }\r\n    }\r\n    \r\n    \r\n    static getDerivedStateFromProps(props,state){\r\n        // console.log(props,state)\r\n        const {viewModleStaus,userdata,rolesData} = props\r\n        // render之前 先获取 当前的category列表渲染到\r\n        if (viewModleStaus===1) {\r\n            return {\r\n                visible:true,\r\n                userdata,\r\n            }\r\n        }else{\r\n            return {visible:false}\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        // console.log('DidMount',this.form)\r\n        // this.form&&this.form.setFieldsValue(()=>({ parentCaregory:parentId  }))\r\n    }\r\n    componentWillUnmount(){\r\n        console.log('will mount')\r\n    }\r\n    \r\n    \r\n    render() {\r\n        const {visible} = this.state\r\n        const {parentId,rolesArr,userdata} = this.props\r\n        const {email,password,phone,username,role_id,_id} = userdata;\r\n        const initialValues = {\r\n            username,\r\n            email,\r\n            password,\r\n            phone,\r\n            role_id\r\n        }\r\n        return (\r\n            <Modal\r\n                title={_id?'更新用户':'添加用户'}\r\n                visible={visible}\r\n                onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n            >\r\n                {/* 表单 */}\r\n                <Form ref = {c=>this.form = c}  name=\"basic\" labelCol={{ pan: 8, }}\r\n                    wrapperCol={{ span: 16, }}\r\n                    initialValues={initialValues}\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed = {this.onFinishFailed}\r\n                    labelCol={{span:6}}\r\n                    wrapperCol={{span:12}}\r\n                    validateTrigger={['onBlur','']}\r\n                >\r\n                     <Item  label=\"用户名\" name=\"username\" placeholder='请输入用户名'\r\n                        rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '用户名不能为空',\r\n                                },\r\n                                \r\n                                {\r\n                                    type:'string',\r\n                                    min:5,\r\n                                    message:'长度不能小于5'\r\n                                },\r\n                                {\r\n                                    max:20,\r\n                                    message:'长度不能大于20'\r\n                                },\r\n                                {\r\n                                    pattern:/^[\\w]+$/,\r\n                                    message:'只能是字母、数字和下划线的组合'\r\n                                }\r\n                            ]}\r\n                        >\r\n                        <Input />\r\n                    </Item>\r\n                    {\r\n                        _id?'':(\r\n                            <Item  label=\"密码\" name=\"password\"  placeholder='请输入密码'\r\n                                rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            message: '密码不能为空',\r\n                                        },\r\n                                        {\r\n                                            min:6,\r\n                                            message:'长度不能小于6'\r\n                                        },\r\n                                        {\r\n                                            pattern:/^[\\w]+$/,\r\n                                            message:'只能是字母、数字和下划线的组合'\r\n                                        }\r\n\r\n                                    ]}\r\n                                >\r\n                                <Input type ='password' />\r\n                            </Item>\r\n                        )\r\n                    }\r\n\r\n\r\n                     <Item  label=\"手机号\" name=\"phone\" placeholder='请输入手机号'\r\n                        rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '手机号不能为空',\r\n                                },\r\n                                {\r\n                                    pattern:/^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$/,\r\n                                    message:'请输入正确格式的手机号码'\r\n                                }\r\n                            ]}\r\n                        >\r\n                        <Input type='text' />\r\n                    </Item>\r\n                     <Item  label=\"邮箱\" name=\"email\" placeholder='请输入邮箱'\r\n                        rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '邮箱不能为空',\r\n                                },\r\n                                {\r\n                                    pattern:/^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/,\r\n                                    message:'请输入正确的邮箱格式'\r\n                                }\r\n                            ]}\r\n                        >\r\n                        <Input type = 'email'  />\r\n                    </Item>\r\n                \r\n\r\n\r\n                    <Item label='权限角色' name='role_id'\r\n                        rules={[\r\n                            \r\n                        ]}\r\n                    >\r\n                        <Select\r\n                            showSearch\r\n                            \r\n                            placeholder=\"选择权限角色\"\r\n                            optionFilterProp=\"children\"\r\n                            onChange={this.onChange}\r\n                            \r\n                            onSearch={this.onSearch}\r\n                            value ={parentId}\r\n                            // defaultValue= {parentId||''}\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                // console.log(option)\r\n                            }\r\n                        >\r\n                            \r\n                            {rolesArr.map((data) => {\r\n                                return (\r\n                                    <Option  value={data._id} key = {data._id}>{data.name}</Option>\r\n                                )\r\n                            })}\r\n                            \r\n                        </Select>\r\n                    </Item>\r\n                    <Button ref={(e)=>this.submitBtnRef = e} type='primary' htmlType='submit'></Button>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n  \r\n","import React, { Component } from 'react'\r\nimport {Card,Button,Table,Space, message,Popconfirm} from 'antd'\r\nimport {reqGetAllUser,reqRemoveUser} from '../../api'\r\nimport AddUpdateModel from './AddOrUpdate'\r\nexport default class User extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.initNode();\r\n        this.state = {\r\n            dataSource:[],\r\n            user:{},\r\n            viewModelStatus:0,\r\n\r\n            //0 弹出框关闭  1:弹出框展开\r\n        }\r\n    }\r\n    \r\n\r\n    initRoleNameObject = (roles) => {\r\n        const obj =  roles.reduce((pre,current) => {\r\n            pre[current._id] = current.name\r\n            return pre;\r\n        },{})\r\n        this.roleName_Id = obj;\r\n\r\n    }\r\n    getUserList = async() => {\r\n        const result =await reqGetAllUser();\r\n        if (result.status === 0) {\r\n            // 用户数据保存打state中\r\n            this.rolesArr = result.data.roles;\r\n            this.initRoleNameObject(result.data.roles);\r\n            this.setState({dataSource:result.data.users});\r\n        }else{\r\n            message.error('获取用户数据失败')\r\n        }\r\n    }\r\n\r\n    addModel = () => {\r\n        this.userdata ={};\r\n        this.setState({viewModelStatus:1})\r\n    }\r\n    changeModel = (data)=>{\r\n        this.userdata =data;\r\n        this.setState({viewModelStatus:1})\r\n    }\r\n    // 删除用户\r\n    removeUser =async (_id) => {\r\n        let result =  await reqRemoveUser(_id);\r\n        if (result.status === 0) {\r\n            message.success('删除成功')\r\n        }else{\r\n            message.error('删除失败')\r\n        }\r\n    }\r\n    removeConfirm = (e) => {\r\n        this.removeUser(e._id)\r\n        // 重新渲染数据\r\n        this.getUserList()\r\n    }\r\n    \r\n\r\n    initNode = () => {\r\n        this.title =( <Space>\r\n            <Button type= 'primary' onClick = {()=>this.addModel()}>添加用户</Button>\r\n            </Space>)\r\n        this.columns = [\r\n            {\r\n              title: '用户名',\r\n              dataIndex: 'username',\r\n            },\r\n            {\r\n              title: '电话号码',\r\n              dataIndex: 'phone'\r\n            },\r\n            {\r\n              title: '创建时间',\r\n              dataIndex: 'create_time',\r\n              render:(text)=> text? (new Date(text).toLocaleString()):''\r\n              \r\n            },\r\n            {\r\n              title: '邮箱',\r\n              dataIndex: 'email',\r\n            },\r\n            {\r\n              title: '权限角色',\r\n              dataIndex: 'role_id',\r\n              render:text=>this.roleName_Id[text]//没有获取到roleName_Id 发送请求得到数据之前\r\n            },\r\n            {\r\n                title: '操作',\r\n                width:150,\r\n                render: (text, record) => {\r\n                    return (\r\n                              <Space size=\"middle\">\r\n                              <Button type='link' onClick = {() => {this.changeModel(text)}} > 更改</Button>\r\n                              \r\n                              <Popconfirm\r\n                                title=\"你确定要删除吗\"\r\n                                onConfirm={()=>this.removeConfirm(text)}\r\n                                okText=\"是的，我确定\"\r\n                                cancelText=\"我再想想\"\r\n                                >\r\n                                    <Button type='link' onClick = {()=>{}}>删除</Button>\r\n                                </Popconfirm>\r\n                              \r\n                              \r\n                              </Space>\r\n                              )\r\n                }\r\n                ,\r\n              },\r\n\r\n        ];\r\n        \r\n    }\r\n\r\n    \r\n    changeModelStatus = (viewModelStatus) => {\r\n        this.setState({viewModelStatus})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUserList()\r\n    }\r\n    render() {\r\n        \r\n        const {dataSource,viewModelStatus} = this.state\r\n\r\n        return (\r\n            <Card title ={this.title}\r\n            >\r\n                <Table \r\n                    dataSource={dataSource} columns={this.columns} \r\n                    bordered = {true}\r\n                    rowKey = '_id'\r\n                    onRow={this.onRow}\r\n                    pagination = {{defaultPageSize:5}}\r\n                />\r\n                {\r\n                    viewModelStatus === 0?null:\r\n                            <AddUpdateModel viewModleStaus ={viewModelStatus} \r\n                                changeModelStatus = {this.changeModelStatus} \r\n                                userdata = {this.userdata}  \r\n                                rolesArr = {this.rolesArr}\r\n                                getUserList = {this.getUserList}\r\n                            />\r\n                    \r\n\r\n                }\r\n            </Card>    \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Badge,Avatar,Tabs,Modal,Button} from 'antd'\r\nimport {saveTagstoStorage,getActiveTagKey,getTagsArr} from '../../utils/storageUtils'\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport { UserOutlined,CloseCircleOutlined,ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport PubSub from 'pubsub-js'\r\nimport './index.css'\r\nimport { reqGetWeather } from '../../api'\r\nimport {connect} from 'react-redux'\r\nimport {logout} from '../../redux/actions/user'\r\n// 退出提示框\r\nconst { confirm } = Modal;\r\n\r\n\r\n\r\n// 天气\r\n\r\nconst {TabPane } = Tabs\r\nclass MyHeader extends Component {\r\n    newTabIndex = 0;\r\n    constructor(props){\r\n        super(props)\r\n        // 初始化tabs数据\r\n        // 一开始加载的时候是只有home ，但是若打开过多个，再点击刷新，那么应该是存储在本地的\r\n        let initialPanes = [];\r\n        let activeKey = '';\r\n        if (getTagsArr().length>0) {\r\n            // 本地存储tags数据\r\n            initialPanes = getTagsArr();\r\n            activeKey = getActiveTagKey();\r\n        }else{\r\n            // 没有标签 处于none的状态\r\n            // console.log('刷新后的状态',this.props.location)\r\n            this.props.history.push('/home')\r\n            initialPanes = [\r\n                {   \r\n                    title: '首页',    \r\n                    key: '/home' \r\n                },\r\n            ];\r\n            activeKey = '/home';\r\n            \r\n        }\r\n\r\n        this.state = {\r\n            activeKey,\r\n            panes: initialPanes,\r\n            weather:{},\r\n            time:''\r\n        };\r\n    }\r\n    \r\n\r\n    // 改变tags的active时\r\n    onChange = activeKey => {\r\n        saveTagstoStorage(activeKey,this.state.panes)\r\n        this.setState({ activeKey });\r\n    };\r\n    \r\n    onEdit = (targetKey, action) => {\r\n        this[action](targetKey);\r\n    };\r\n    \r\n    add = (paneObj) => {\r\n        const { panes } = this.state;\r\n        const activeKey = paneObj.key;\r\n        const newPanes = [...panes];\r\n        console.log(paneObj,)\r\n        //判断新添加的pane是否已经存在，若存在 则不添加，但是activeKye要变成它\r\n        function getKey(pane){\r\n            return pane.key === paneObj.key\r\n        }\r\n        if(!newPanes.find(getKey)){\r\n            //没有找到相关pane\r\n            newPanes.push(paneObj);//添加打开的标签\r\n        }\r\n        //将新的tags数组保存到localstorage中\r\n        saveTagstoStorage(activeKey,newPanes)\r\n        // 更新状态\r\n        this.setState({\r\n            panes: newPanes,\r\n            activeKey,\r\n        });\r\n    };\r\n    \r\n    remove = targetKey => {\r\n        const { panes, activeKey } = this.state;\r\n        let newActiveKey = activeKey;\r\n        let lastIndex;\r\n        panes.forEach((pane, i) => {\r\n            if (pane.key === targetKey) {\r\n            lastIndex = i - 1;\r\n            }\r\n        });\r\n        const newPanes = panes.filter(pane => pane.key !== targetKey);\r\n        if (newPanes.length && newActiveKey === targetKey) {\r\n            if (lastIndex >= 0) {\r\n                newActiveKey = newPanes[lastIndex].key;\r\n                // 不是第一个，删除后，active往前进一\r\n            } else {\r\n                // 是第一个，往后退一\r\n                newActiveKey = newPanes[0].key;\r\n            }\r\n            // 删除了当前页面标签，activeKey改为了新的，跳转到新的页面标签\r\n            this.props.history.replace(newActiveKey)\r\n\r\n        }else if(newPanes.length === 0){\r\n            // 已经没有标签了\r\n            console.log('meiyou biaoqianl')\r\n            newActiveKey = '';\r\n            this.props.history.replace('/none')\r\n            \r\n        }\r\n        //将新的tags数组保存到localstorage中\r\n        saveTagstoStorage(newActiveKey,newPanes)\r\n        this.setState({\r\n            panes: newPanes,\r\n            activeKey: newActiveKey,\r\n        });\r\n    };\r\n\r\n    \r\n// 退出登录\r\n    logOut = () => {\r\n        confirm({\r\n            title: '您确定要退出吗?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            onOk:()=> {\r\n            //   确认退出\r\n\r\n            // 清除内容中的用户信息\r\n            // memoryUtils.user ={}\r\n\r\n            // 清除redux中的user\r\n            this.props.logout();\r\n            \r\n            // 跳转到Login界面\r\n                this.props.history.replace('/login')\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n     // 生命周期\r\n    componentDidMount(){\r\n        // 订阅sider发布的菜单消息\r\n        PubSub.subscribe('addTags',(msg,data) => {\r\n            // console.log('接收到来自sider的数据')\r\n            // console.log(data)\r\n            this.add(data)  //{key:'/home',title:'首页'}\r\n        })\r\n        // 获取天气\r\n        let weather = {}\r\n        let getWeather = async ()=>{\r\n            weather = await reqGetWeather({\r\n                key:'5054ae320e60bfdf4c03a21cb2efec52',\r\n                city:'110101',\r\n                extensions:'all',\r\n                output:'json'\r\n            })\r\n            this.setState({weather})\r\n            // console.log('异步函数调用了')\r\n        }\r\n        getWeather()\r\n\r\n        // 设置定时器\r\n        this.timer = setInterval(() => {\r\n            let time = new Date().toLocaleTimeString();\r\n            this.setState({time})\r\n        }, 1000);\r\n    }\r\n   \r\n    componentWillUnmount(){\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    render () {\r\n        \r\n        // 获取当前页与\r\n        const { panes, activeKey,weather,time } = this.state;\r\n        const {user} = this.props;\r\n        let  dayWeather ='未知'\r\n        if (weather.forecasts) {\r\n            dayWeather= weather.forecasts[0].casts[0].dayweather\r\n        }\r\n        // console.log(this.props)\r\n        \r\n        return (\r\n            <div className = 'admin-header'>\r\n                {/* 头部上部分 */}\r\n                <div className=\"header-top\">\r\n                   \r\n                     {/* 头像 */}\r\n                     <span className=\"avatar-item\">\r\n                        <Badge size='small' count={99}>\r\n                            <Avatar  shape=\"square\" icon={<UserOutlined />} />\r\n                        </Badge>\r\n                    </span>\r\n                    \r\n                    {/* 用户名 */}\r\n                    <span className='header-username'>{user.username}</span>\r\n                    {/* out */}\r\n                    <span className = 'quite-login'>\r\n                        <Button type=\"link\" onClick = {this.logOut}>退出</Button>\r\n                    </span>\r\n                \r\n                </div>\r\n                {/* 头部下部分 */}\r\n                <div className=\"header-bottom\">\r\n                    {/* tabs 展示打开过的标签页 */}\r\n                    <div className=\"header-bottom-left\">\r\n                        <Tabs  hideAdd type=\"editable-card\" size='small'\r\n                            onChange={this.onChange}\r\n                            activeKey={activeKey}\r\n                            onEdit={this.onEdit}\r\n                            \r\n                        >\r\n                            {panes.map(pane => (\r\n                                    <TabPane  tab={\r\n                                        // pane.title\r\n                                        <Link to={pane.key}>{pane.title}</Link>\r\n                                    } key={pane.key} closable={pane.closable} closeIcon ={<CloseCircleOutlined /> } />    \r\n                            ))}\r\n                        </Tabs>\r\n                    </div>\r\n                                {/*时间与天气 */}\r\n                    <div className=\"header-bottom-right\">\r\n                        <div className = 'timeText'>\r\n                            {new Date().toLocaleDateString()}\r\n                            <br/>\r\n                            {time}\r\n                        </div>\r\n                        <span className='wether'></span>\r\n                        {dayWeather}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state=>({user:state.user}),\r\n    {\r\n        logout\r\n    }\r\n)(withRouter(MyHeader))","import React, { Component } from 'react'\r\n\r\nexport default class MyFooter extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Ant Design ©2018 Created by Ant UED\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.css'\r\nexport default class NonePage extends Component {\r\n    render() {\r\n        return (\r\n            <div className = 'spotlight'>\r\n                <h1>404 NotFound</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Layout } from 'antd';\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\nimport LeftNav from '../LeftNav'\r\nimport './index.css'\r\n// 引入内容展示区域的组件\r\nimport Category from '../Commodity/Category'\r\nimport Bar from '../Charts/Bar'\r\nimport Line from '../Charts/Line'\r\nimport Pie from '../Charts/Pie'\r\nimport Home from '../Home'\r\nimport Product from '../Commodity/Product'\r\nimport Role from '../Role'\r\nimport User from '../User'\r\nimport MyHeader from '../MyHeader'\r\nimport MyFooter from '../MyFooter'\r\nimport NonePage from '../NonePage'\r\nimport {connect} from 'react-redux'\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nclass Admin extends Component {\r\n    state = {\r\n        collapeseType:false,\r\n    }\r\n    // 展开-收起时的回调函数\r\n    collapeseHanlde = (collapsed, type) => {\r\n        // console.log(collapsed, type);\r\n        if (collapsed) {\r\n            // console.log(this.menu)\r\n        }\r\n        this.setState({collapeseType:collapsed})\r\n    }\r\n    \r\n    render() {\r\n        // 渲染前查看是否登录\r\n        const user  = this.props.user\r\n        // console.log(user)\r\n        if(!user||!user._id){\r\n            //跳转到登录页面\r\n            return <Redirect to='/login'/>\r\n        }\r\n\r\n        return (\r\n            \r\n            <Layout className = 'adminBg'>\r\n                <Sider\r\n                    breakpoint=\"lg\"\r\n                    collapsedWidth=\"50\"\r\n                    onBreakpoint={broken => {\r\n                        // console.log(broken);\r\n                        \r\n                    }}\r\n                    // sider是否关闭\r\n                    onCollapse={this.collapeseHanlde}\r\n                    >\r\n\r\n                    {/* 左边导航栏 */}\r\n                    <LeftNav collapeseType = {this.state.collapeseType} />\r\n                </Sider>\r\n\r\n                <Layout>\r\n                    {/* 头部展示区域 */}\r\n                    <Header style = {{ height:'80px',padding:0}}>\r\n                        <MyHeader/>\r\n                    </Header>\r\n\r\n                    {/* 内容展示区域 */}\r\n                    <Content style={{ margin: '24px 16px 0' }}>\r\n                        <div className=\"site-layout-background\" style={{ padding: 14, minHeight: 500 }}>\r\n                         \r\n                            {/* 注册路由 */}\r\n                            <Switch>\r\n                                <Redirect exact from='/' to='/home' />\r\n                                <Route path='/home' component={Home}/>\r\n                                <Route path='/commodity/category' component={Category}/>\r\n                                <Route path='/commodity/product' component={Product}/>\r\n                                <Route path='/role' component={Role}/>\r\n                                <Route path='/user' component={User}/>\r\n                                <Route path='/charts/bar' component={Bar}/>\r\n                                <Route path='/charts/line' component={Line}/>\r\n                                <Route path='/charts/pie' component={Pie}/>\r\n                                <Route  component={NonePage}/> \r\n                               \r\n                            </Switch>\r\n\r\n                        </div>\r\n                    </Content>\r\n                    {/* 底部展示区域 */}\r\n                    <Footer style={{ textAlign: 'center' ,backgroundColor:'#ddd'}}>\r\n                        <MyFooter/>\r\n                    </Footer>\r\n                </Layout>\r\n            </Layout>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state=>({user:state.user}),\r\n    {}\r\n)(Admin)","import React, { useState } from 'react';\r\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\r\nimport './rejister.css'\r\n\r\nconst { Option } = Select;\r\nconst residences = [\r\n  {\r\n    value: 'zhejiang',\r\n    label: 'Zhejiang',\r\n    children: [\r\n      {\r\n        value: 'hangzhou',\r\n        label: 'Hangzhou',\r\n        children: [\r\n          {\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: 'jiangsu',\r\n    label: 'Jiangsu',\r\n    children: [\r\n      {\r\n        value: 'nanjing',\r\n        label: 'Nanjing',\r\n        children: [\r\n          {\r\n            value: 'zhonghuamen',\r\n            label: 'Zhong Hua Men',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst Register = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = (values) => {\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n\r\n  const onWebsiteChange = (value) => {\r\n    if (!value) {\r\n      setAutoCompleteResult([]);\r\n    } else {\r\n      setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n    }\r\n  };\r\n\r\n  const websiteOptions = autoCompleteResult.map((website) => ({\r\n    label: website,\r\n    value: website,\r\n  }));\r\n\r\n  return (\r\n      <div className = 'registerBg'>\r\n        <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n        prefix: '86',\r\n      }}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(_, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"nickname\"\r\n        label=\"Nickname\"\r\n        tooltip=\"What do you want others to call you?\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your nickname!',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"residence\"\r\n        label=\"Habitual Residence\"\r\n        rules={[\r\n          {\r\n            type: 'array',\r\n            required: true,\r\n            message: 'Please select your habitual residence!',\r\n          },\r\n        ]}\r\n      >\r\n        <Cascader options={residences} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"phone\"\r\n        label=\"Phone Number\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your phone number!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          addonBefore={prefixSelector}\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"website\"\r\n        label=\"Website\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input website!',\r\n          },\r\n        ]}\r\n      >\r\n        <AutoComplete options={websiteOptions} onChange={onWebsiteChange} placeholder=\"website\">\r\n          <Input />\r\n        </AutoComplete>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"gender\"\r\n        label=\"Gender\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please select gender!',\r\n          },\r\n        ]}\r\n      >\r\n        <Select placeholder=\"select your gender\">\r\n          <Option value=\"male\">Male</Option>\r\n          <Option value=\"female\">Female</Option>\r\n          <Option value=\"other\">Other</Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n        <Row gutter={8}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              name=\"captcha\"\r\n              noStyle\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input the captcha you got!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Button>Get captcha</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"agreement\"\r\n        valuePropName=\"checked\"\r\n        rules={[\r\n          {\r\n            validator: (_, value) =>\r\n              value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n          },\r\n        ]}\r\n        {...tailFormItemLayout}\r\n      >\r\n        <Checkbox>\r\n          I have read the <a href=\"\">agreement</a>\r\n        </Checkbox>\r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register\r\n\r\n\r\n\r\n","import React, { Component,Fragment } from 'react'\r\nimport {Route,Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/Login'\r\nimport Admin from './pages/Admin'\r\nimport Register from './pages/Register'\r\n\r\nexport default class App extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {/* 注册路由 */}\r\n                <Switch>\r\n                    <Route path='/login' component = {Login}/>\r\n                    <Route path='/register' component = {Register}/>\r\n                    <Route path='/' component = {Admin}/>\r\n                    \r\n                </Switch>\r\n              \r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","// 引入自定义常量名称\r\nimport { RECEIVE_USER,RESET_USER,SHOW_ERROR_MSG } from '../contances'\r\nimport {getUser} from '../../utils/storageUtils'\r\nconsole.log(RECEIVE_USER)\r\n// user的reducer\r\nlet initUser =getUser();\r\nexport default function user(prestate = initUser,action){\r\n    const {type,data} = action;\r\n    switch (type) {\r\n        case RECEIVE_USER:\r\n            return data\r\n        case RESET_USER:\r\n            return {}\r\n        case SHOW_ERROR_MSG:\r\n            return {...prestate,msg:data}\r\n        default:\r\n            return prestate;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport user from './user_reducer'\r\nexport default combineReducers({\r\n    user\r\n})","import {createStore,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n// reducers\r\nimport reducers from './reducers'\r\n// 开发工具\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nexport default createStore(reducers,composeWithDevTools(applyMiddleware(thunk)))","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {receiveUser} from './redux/actions/user'\r\nimport {getUser} from './utils/storageUtils'\r\n// react-redux\r\nimport {Provider} from 'react-redux'\r\n// store\r\nimport store from './redux/store'\r\n// 读取local storage中User，将读取到的User保存在memory中\r\nreceiveUser (getUser());\r\n\r\n// \r\n\r\nReactDOM.render(\r\n    <Provider store = {store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    ,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}